{"title":"Qt源码之魔改QFileDialog之路-2 移动介质的处理","slug":"Qt源码之魔改QFileDialog之路-2-移动介质的处理","date":"2020-06-26T07:13:36.000Z","updated":"2020-06-26T07:14:56.818Z","comments":true,"path":"api/articles/Qt源码之魔改QFileDialog之路-2-移动介质的处理.json","excerpt":null,"covers":null,"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>移动介质，一般就是指当前Linux系统下的 <strong>U 盘 / 挂载硬盘</strong>。 这两个移动介质都是挂载在<strong>/media/yourusername</strong>下来做的处理。（fhs2.4）（实际上fhs3.0的标准已经改到/run/media/username下了）</p>\n<h2 id=\"前期调研\"><a href=\"#前期调研\" class=\"headerlink\" title=\"前期调研\"></a>前期调研</h2><p>从网上找到关于u盘检测的插拔有两种方案（这两种方案硬盘挂载是检测不到的）：</p>\n<h3 id=\"U盘插拔检测\"><a href=\"#U盘插拔检测\" class=\"headerlink\" title=\"U盘插拔检测\"></a>U盘插拔检测</h3><h4 id=\"QDbus的方案\"><a href=\"#QDbus的方案\" class=\"headerlink\" title=\"QDbus的方案\"></a>QDbus的方案</h4><blockquote>\n<ul>\n<li>使用QDbus来检测U盘的插拔的处理，原文链接 <a href=\"http://www.qtcn.org/bbs/read-htm-tid-14535.html\" target=\"_blank\" rel=\"noopener\">http://www.qtcn.org/bbs/read-htm-tid-14535.html</a></li>\n</ul>\n</blockquote>\n<p>防止网址被吞这里把代码上上</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\" spellcheck=\"true\">//在pro文件中应该加入</span>\nQT <span class=\"token operator\">+</span><span class=\"token operator\">=</span>dbus\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QtDBus/QDBusConnection></span></span>\n<span class=\"token comment\" spellcheck=\"true\">//以下为检测设备的插入</span>\nQDBusConnection<span class=\"token operator\">::</span><span class=\"token function\">systemBus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"org.freedesktop.Hal\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"/org/freedesktop/Hal/Manager\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"org.freedesktop.Hal.Manager\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"DeviceAdded\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">slotDeviceAdded</span><span class=\"token punctuation\">(</span>QString <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//以下为检查设备的拨出</span>\nQDBusConnection<span class=\"token operator\">::</span><span class=\"token function\">systemBus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"org.freedesktop.Hal\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"/org/freedesktop/Hal/Manager\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"org.freedesktop.Hal.Manager\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"DeviceRemoved\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">slotDeviceRemoved</span><span class=\"token punctuation\">(</span>QString <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n<span class=\"token comment\" spellcheck=\"true\">//在slotDeviceAdded(QString udi)函数中，要使用到</span>\n\nQDBusInterface <span class=\"token function\">device</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"org.freedesktop.Hal\"</span><span class=\"token punctuation\">,</span> udi<span class=\"token punctuation\">,</span> <span class=\"token string\">\"org.freedesktop.Hal.Device\"</span> <span class=\"token punctuation\">,</span> QDBusConnection<span class=\"token operator\">::</span><span class=\"token function\">systemBus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//通过HAL可以查询到设备为volume的设备，然后通过判断是否为/dev/sd*的设备，就可以判断出是否为U盘，然后调用mount就可以了。</span>\n<span class=\"token comment\" spellcheck=\"true\">//这时记录下U盘的UDI，在检测到设备拨出时，再查询一下U盘的UDI是否还在，就知道U盘是否被拨出了。</span></code></pre>\n<h4 id=\"QSocketNotifier来实现\"><a href=\"#QSocketNotifier来实现\" class=\"headerlink\" title=\"QSocketNotifier来实现\"></a>QSocketNotifier来实现</h4><p>这个是某个老哥使用socket来实现文件监控的，实际上这个方案完全可以使用QFileSystemWatcher来检测<strong>/proc/mounts</strong>（实际上Qt源码QSystemWatcher，里边的监控文件的实现就是使用的QSocketNotifier=。=，既然这个老哥自己想出来了，还是把他的链接贴上去吧，<a href=\"https://blog.csdn.net/penghuilater/article/details/53410646\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/penghuilater/article/details/53410646</a> 接下来我会讲QFileSystemWatcher的实现原理的），代码我还是照样贴上，防止网页被吞。</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> VOLUMEMONITOR_H</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> VOLUMEMONITOR_H</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QObject></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QSet></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QSocketNotifier></span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">VolumeMonitor</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> QObject\n<span class=\"token punctuation\">{</span>\n    Q_OBJECT\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">VolumeMonitor</span><span class=\"token punctuation\">(</span>QObject <span class=\"token operator\">*</span>parent <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">~</span><span class=\"token function\">VolumeMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsignals<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">deviceAdded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString<span class=\"token operator\">&amp;</span> addDev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">deviceRemoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString<span class=\"token operator\">&amp;</span> removeDe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> slots<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">onFileChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">int</span> m_fileKde <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    QSocketNotifier<span class=\"token operator\">*</span> m_socketNotifier<span class=\"token punctuation\">;</span>\n    QSet<span class=\"token operator\">&lt;</span>QString<span class=\"token operator\">></span> m_fileContentSet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">// VOLUMEMONITOR_H </span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------------</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"volumemonitor.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QFile></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QSet></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QTextStream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QDebug></span></span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> mountFile<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"/proc/mounts\"</span><span class=\"token punctuation\">;</span>\n    QSet <span class=\"token operator\">&lt;</span>QString<span class=\"token operator\">></span> <span class=\"token function\">getMountFileContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        QFile <span class=\"token function\">file</span><span class=\"token punctuation\">(</span>mountFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        QSet <span class=\"token operator\">&lt;</span>QString<span class=\"token operator\">></span> fileContentSet<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>QIODevice<span class=\"token operator\">::</span>ReadOnly <span class=\"token operator\">|</span> QIODevice<span class=\"token operator\">::</span>Text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                QTextStream <span class=\"token function\">textStream</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                QString fileContent <span class=\"token operator\">=</span> textStream<span class=\"token punctuation\">.</span><span class=\"token function\">readAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                QStringList items <span class=\"token operator\">=</span> fileContent<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">foreach</span> <span class=\"token punctuation\">(</span>QString item<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        fileContentSet <span class=\"token operator\">&lt;&lt;</span> item<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> fileContentSet<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    QString <span class=\"token function\">getMountPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString<span class=\"token operator\">&amp;</span> record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> QStringList items <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nVolumeMonitor<span class=\"token operator\">::</span><span class=\"token function\">VolumeMonitor</span><span class=\"token punctuation\">(</span>QObject <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">:</span> <span class=\"token function\">QObject</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> VolumeMonitor<span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//get the set of mounted device's info;</span>\n    m_fileContentSet <span class=\"token operator\">=</span> <span class=\"token function\">getMountFileContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    m_fileKde <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>mountFile<span class=\"token punctuation\">,</span> O_RDONLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_fileKde <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">qWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"open /proc/mounts failed!\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    m_socketNotifier <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">QSocketNotifier</span><span class=\"token punctuation\">(</span>m_fileKde<span class=\"token punctuation\">,</span>\n                                           QSocketNotifier<span class=\"token operator\">::</span>Write<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>m_socketNotifier<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>QSocketNotifier<span class=\"token operator\">::</span>activated<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>VolumeMonitor<span class=\"token operator\">::</span>onFileChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> VolumeMonitor<span class=\"token operator\">::</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_fileKde<span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> m_socketNotifier<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> VolumeMonitor<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>m_fileKde<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m_fileKde <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">delete</span> m_socketNotifier<span class=\"token punctuation\">;</span>\n        m_socketNotifier <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> VolumeMonitor<span class=\"token operator\">::</span><span class=\"token function\">onFileChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    QSet <span class=\"token operator\">&lt;</span>QString<span class=\"token operator\">></span> changedItemSet <span class=\"token operator\">=</span> <span class=\"token function\">getMountFileContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString<span class=\"token operator\">&amp;</span> item<span class=\"token operator\">:</span> changedItemSet <span class=\"token operator\">-</span> m_fileContentSet<span class=\"token punctuation\">)</span>\n        emit <span class=\"token function\">deviceAdded</span><span class=\"token punctuation\">(</span><span class=\"token function\">getMountPoint</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QString<span class=\"token operator\">&amp;</span> item<span class=\"token operator\">:</span> m_fileContentSet <span class=\"token operator\">-</span> changedItemSet<span class=\"token punctuation\">)</span>\n        emit <span class=\"token function\">deviceRemoved</span><span class=\"token punctuation\">(</span><span class=\"token function\">getMountPoint</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    m_fileContentSet <span class=\"token operator\">=</span> changedItemSet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nVolumeMonitor<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">VolumeMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4 id=\"QStorageInfo\"><a href=\"#QStorageInfo\" class=\"headerlink\" title=\"QStorageInfo\"></a>QStorageInfo</h4><p>实际上Qt 5.4之后在QtCore中引入了一个新的类叫做QStorageInfo，这个类可以获取到相关的磁盘信息。这个并不是关键的，因为本次我也没有使用这个类，就是在这里简单的提一下。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>实际上这一篇的关键技术是QFileSystemWatcher，把<strong>/media/yourusername</strong>添加到监视目录中，然后就可以通过QFileInfo and QDir来获取到相关的信息，其中QFileDialog中的QFileSystemModel也可以跟随实时更新。这样依旧可以依旧获取到移动介质的信息以及插拔信息。这个才是最终的解决方案。接下来要讲一下QFileSystemWatcher的源码。可能你看到的源码版本与我的版本不同。</p>\n","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>移动介质，一般就是指当前Linux系统下的 <strong>U 盘 / 挂载硬盘</strong>。 这两个移动介质都是挂载在<strong>/media/yourusername</strong>下来做的处理。（fhs2.4）（实际上fhs3.0的标准已经改到/run/media/username下了）</p>\n<h2 id=\"前期调研\"><a href=\"#前期调研\" class=\"headerlink\" title=\"前期调研\"></a>前期调研</h2><p>从网上找到关于u盘检测的插拔有两种方案（这两种方案硬盘挂载是检测不到的）：</p>\n<h3 id=\"U盘插拔检测\"><a href=\"#U盘插拔检测\" class=\"headerlink\" title=\"U盘插拔检测\"></a>U盘插拔检测</h3><h4 id=\"QDbus的方案\"><a href=\"#QDbus的方案\" class=\"headerlink\" title=\"QDbus的方案\"></a>QDbus的方案</h4><blockquote>\n<ul>\n<li>使用QDbus来检测U盘的插拔的处理，原文链接 <a href=\"http://www.qtcn.org/bbs/read-htm-tid-14535.html\" target=\"_blank\" rel=\"noopener\">http://www.qtcn.org/bbs/read-htm-tid-14535.html</a></li>\n</ul>\n</blockquote>\n<p>防止网址被吞这里把代码上上</p>\n<pre><code class=\"cpp\">//在pro文件中应该加入\nQT +=dbus\n\n#include &lt;QtDBus/QDBusConnection&gt;\n//以下为检测设备的插入\nQDBusConnection::systemBus().connect( &quot;org.freedesktop.Hal&quot;,\n                        &quot;/org/freedesktop/Hal/Manager&quot;,\n                        &quot;org.freedesktop.Hal.Manager&quot;,\n                        &quot;DeviceAdded&quot;,\n                        this,\n                        SLOT(slotDeviceAdded(QString )));\n//以下为检查设备的拨出\nQDBusConnection::systemBus().connect( &quot;org.freedesktop.Hal&quot;,\n                        &quot;/org/freedesktop/Hal/Manager&quot;,\n                        &quot;org.freedesktop.Hal.Manager&quot;,\n                        &quot;DeviceRemoved&quot;,\n                        this,\n                        SLOT(slotDeviceRemoved(QString ))); \n\n//在slotDeviceAdded(QString udi)函数中，要使用到\n\nQDBusInterface device(&quot;org.freedesktop.Hal&quot;, udi, &quot;org.freedesktop.Hal.Device&quot; , QDBusConnection::systemBus());\n//通过HAL可以查询到设备为volume的设备，然后通过判断是否为/dev/sd*的设备，就可以判断出是否为U盘，然后调用mount就可以了。\n//这时记录下U盘的UDI，在检测到设备拨出时，再查询一下U盘的UDI是否还在，就知道U盘是否被拨出了。</code></pre>\n<h4 id=\"QSocketNotifier来实现\"><a href=\"#QSocketNotifier来实现\" class=\"headerlink\" title=\"QSocketNotifier来实现\"></a>QSocketNotifier来实现</h4><p>这个是某个老哥使用socket来实现文件监控的，实际上这个方案完全可以使用QFileSystemWatcher来检测<strong>/proc/mounts</strong>（实际上Qt源码QSystemWatcher，里边的监控文件的实现就是使用的QSocketNotifier=。=，既然这个老哥自己想出来了，还是把他的链接贴上去吧，<a href=\"https://blog.csdn.net/penghuilater/article/details/53410646\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/penghuilater/article/details/53410646</a> 接下来我会讲QFileSystemWatcher的实现原理的），代码我还是照样贴上，防止网页被吞。</p>\n<pre><code class=\"cpp\">#ifndef VOLUMEMONITOR_H\n#define VOLUMEMONITOR_H\n#include &lt;QObject&gt;\n#include &lt;QSet&gt;\n#include &lt;QSocketNotifier&gt;\nclass VolumeMonitor : public QObject\n{\n    Q_OBJECT\npublic:\n    VolumeMonitor(QObject *parent = 0);\n    ~VolumeMonitor();\nsignals:\n    void deviceAdded(const QString&amp; addDev);\n    void deviceRemoved(const QString&amp; removeDe);\npublic slots:\n    bool start();\n    bool stop();\n    bool isRunning();\n    void onFileChanged();\nprivate:\n    int m_fileKde = -1;\n    QSocketNotifier* m_socketNotifier;\n    QSet&lt;QString&gt; m_fileContentSet;\n};\n#endif // VOLUMEMONITOR_H \n\n\n//-------------------------------------------------------\n\n#include &quot;volumemonitor.h&quot;\n\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;QFile&gt;\n#include &lt;QSet&gt;\n#include &lt;QTextStream&gt;\n#include &lt;QDebug&gt;\n\nnamespace {\n    const char mountFile[] = &quot;/proc/mounts&quot;;\n    QSet &lt;QString&gt; getMountFileContent() {\n        QFile file(mountFile);\n        QSet &lt;QString&gt; fileContentSet;\n        if (file.exists()) {\n            if (file.open(QIODevice::ReadOnly | QIODevice::Text)) {\n                QTextStream textStream(&amp;file);\n                QString fileContent = textStream.readAll();\n\n                QStringList items = fileContent.split(&quot;\\n&quot;);\n                foreach (QString item, items) {\n                        fileContentSet &lt;&lt; item;\n                }\n                file.close();\n            }\n        }\n\n        return fileContentSet;\n    }\n\n    QString getMountPoint(const QString&amp; record) {\n        const QStringList items = record.split(&quot; &quot;);\n        if (items.length() &gt; 4) {\n            return items.at(1);\n        } else {\n            return &quot;&quot;;\n        }\n    }\n}\n\nVolumeMonitor::VolumeMonitor(QObject *parent)\n    : QObject(parent)\n{\n}\n\nbool VolumeMonitor::start() {\n    //get the set of mounted device&#39;s info;\n    m_fileContentSet = getMountFileContent();\n\n    m_fileKde = open(mountFile, O_RDONLY);\n    if (m_fileKde == -1) {\n        qWarning() &lt;&lt; &quot;open /proc/mounts failed!&quot;;\n        return false;\n    }\n\n    m_socketNotifier = new QSocketNotifier(m_fileKde,\n                                           QSocketNotifier::Write, this);\n\n    connect(m_socketNotifier, &amp;QSocketNotifier::activated,\n            this, &amp;VolumeMonitor::onFileChanged);\n    return true;\n}\n\nbool VolumeMonitor::isRunning() {\n    if (m_fileKde!= -1 &amp;&amp; m_socketNotifier) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nbool VolumeMonitor::stop() {\n    if (this-&gt;isRunning()) {\n        close(m_fileKde);\n        m_fileKde = -1;\n        delete m_socketNotifier;\n        m_socketNotifier = nullptr;\n        return true;\n    } else {\n        return false;\n    }\n}\nvoid VolumeMonitor::onFileChanged() {\n    QSet &lt;QString&gt; changedItemSet = getMountFileContent();\n    for(const QString&amp; item: changedItemSet - m_fileContentSet)\n        emit deviceAdded(getMountPoint(item));\n    for(const QString&amp; item: m_fileContentSet - changedItemSet)\n        emit deviceRemoved(getMountPoint(item));\n\n\n    m_fileContentSet = changedItemSet;\n}\n\nVolumeMonitor::~VolumeMonitor()\n{\n    this-&gt;stop();\n}\n</code></pre>\n<h4 id=\"QStorageInfo\"><a href=\"#QStorageInfo\" class=\"headerlink\" title=\"QStorageInfo\"></a>QStorageInfo</h4><p>实际上Qt 5.4之后在QtCore中引入了一个新的类叫做QStorageInfo，这个类可以获取到相关的磁盘信息。这个并不是关键的，因为本次我也没有使用这个类，就是在这里简单的提一下。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>实际上这一篇的关键技术是QFileSystemWatcher，把<strong>/media/yourusername</strong>添加到监视目录中，然后就可以通过QFileInfo and QDir来获取到相关的信息，其中QFileDialog中的QFileSystemModel也可以跟随实时更新。这样依旧可以依旧获取到移动介质的信息以及插拔信息。这个才是最终的解决方案。接下来要讲一下QFileSystemWatcher的源码。可能你看到的源码版本与我的版本不同。</p>\n","categories":[],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"Qt源码","path":"api/tags/Qt源码.json"}]}