{"title":"Windows下VS2019编译Qt5.13.2源码","slug":"qt-compile-windows","date":"2020-06-28T12:08:40.000Z","updated":"2020-06-30T14:22:04.603Z","comments":true,"path":"api/articles/qt-compile-windows.json","excerpt":null,"covers":["/2020/06/28/qt-compile-windows/windows_build_qt_source_debug2.jpg","/2020/06/28/qt-compile-windows/windows_build_qt_source_debug1.jpg","/2020/06/28/qt-compile-windows/windows_build_qt_source_debug4.jpg","/2020/06/28/qt-compile-windows/windows_build_qt_source_debug3.jpg","/2020/06/28/qt-compile-windows/windows_build_qt_source_debug5.jpg"],"content":"<h1 id=\"编译条件\"><a href=\"#编译条件\" class=\"headerlink\" title=\"编译条件\"></a>编译条件</h1><ul>\n<li>Python2.7.5 or later；</li>\n<li>VS2019；</li>\n<li>Qt5.13.2源码；</li>\n<li>perl</li>\n<li>ruby</li>\n</ul>\n<h1 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h1><blockquote>\n<p><a href=\"http://mirror.bit.edu.cn/qtproject/official_releases/qt/5.14/5.14.2/\" target=\"_blank\" rel=\"noopener\" title=\"http://mirror.bit.edu.cn/qtproject/official_releases/qt/5.14/5.14.2/\">http://mirror.bit.edu.cn/qtproject/official_releases/qt/5.14/5.14.2/</a></p>\n</blockquote>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.13/5.13.2/single/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.13/5.13.2/single/</a></p>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug2.jpg\" alt> </p>\n<h1 id=\"解压到文件夹\"><a href=\"#解压到文件夹\" class=\"headerlink\" title=\"解压到文件夹\"></a>解压到文件夹</h1><p>创建文件夹 qt5.13_build_mt</p>\n<p>现在目录是这样</p>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug1.jpg\" alt> </p>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><h2 id=\"打开VS2019的命令行工具\"><a href=\"#打开VS2019的命令行工具\" class=\"headerlink\" title=\"打开VS2019的命令行工具\"></a>打开VS2019的命令行工具</h2><ul>\n<li>tips，这样configure不用指定编译器了</li>\n</ul>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug4.jpg\" alt> </p>\n<h3 id=\"进入解压的Qt源码目录\"><a href=\"#进入解压的Qt源码目录\" class=\"headerlink\" title=\"进入解压的Qt源码目录\"></a>进入解压的Qt源码目录</h3><p>tips</p>\n<ul>\n<li>直接终端 <code>D:</code> 就是进入D盘。</li>\n<li>进入文件夹命令是<code>cd</code></li>\n<li>返回上一级目录是<code>cd ..</code></li>\n<li>列出当前目录所有文件是 <code>dir</code></li>\n</ul>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug3.jpg\" alt> </p>\n<h3 id=\"输入编译脚本\"><a href=\"#输入编译脚本\" class=\"headerlink\" title=\"输入编译脚本\"></a>输入编译脚本</h3><p>在当前终端输入脚本 configure Qt</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">configure -confirm-license -opensource -debug -prefix \"D:\\QtVersion\\Qt5.13_Build_MT_X64\\qt5.13_build_mt\" -qt-sqlite -qt-zlib -qt-libpng -qt-libjpeg -nomake tests -no-compile-examples -nomake examples </code></pre>\n<p>别忘记自己改下 prefix的位置</p>\n<p>configure完成之后直接</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">nmake\nnmake install</code></pre>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>进入prefix的目录<br><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug5.jpg\" alt> </p>\n<p>编译成功，不管是configure还是nmake都没有啥错。</p>\n<p>PS。我看还有jom编译Qt的方法，原谅我对windows的编译不熟悉。有大佬可以补充下，或者给个完成的链接，我补充上。</p>\n","more":"<h1 id=\"编译条件\"><a href=\"#编译条件\" class=\"headerlink\" title=\"编译条件\"></a>编译条件</h1><ul>\n<li>Python2.7.5 or later；</li>\n<li>VS2019；</li>\n<li>Qt5.13.2源码；</li>\n<li>perl</li>\n<li>ruby</li>\n</ul>\n<h1 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h1><blockquote>\n<p><a href=\"http://mirror.bit.edu.cn/qtproject/official_releases/qt/5.14/5.14.2/\" target=\"_blank\" rel=\"noopener\" title=\"http://mirror.bit.edu.cn/qtproject/official_releases/qt/5.14/5.14.2/\">http://mirror.bit.edu.cn/qtproject/official_releases/qt/5.14/5.14.2/</a></p>\n</blockquote>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.13/5.13.2/single/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.13/5.13.2/single/</a></p>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug2.jpg\" alt> </p>\n<h1 id=\"解压到文件夹\"><a href=\"#解压到文件夹\" class=\"headerlink\" title=\"解压到文件夹\"></a>解压到文件夹</h1><p>创建文件夹 qt5.13_build_mt</p>\n<p>现在目录是这样</p>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug1.jpg\" alt> </p>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><h2 id=\"打开VS2019的命令行工具\"><a href=\"#打开VS2019的命令行工具\" class=\"headerlink\" title=\"打开VS2019的命令行工具\"></a>打开VS2019的命令行工具</h2><ul>\n<li>tips，这样configure不用指定编译器了</li>\n</ul>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug4.jpg\" alt> </p>\n<h3 id=\"进入解压的Qt源码目录\"><a href=\"#进入解压的Qt源码目录\" class=\"headerlink\" title=\"进入解压的Qt源码目录\"></a>进入解压的Qt源码目录</h3><p>tips</p>\n<ul>\n<li>直接终端 <code>D:</code> 就是进入D盘。</li>\n<li>进入文件夹命令是<code>cd</code></li>\n<li>返回上一级目录是<code>cd ..</code></li>\n<li>列出当前目录所有文件是 <code>dir</code></li>\n</ul>\n<p><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug3.jpg\" alt> </p>\n<h3 id=\"输入编译脚本\"><a href=\"#输入编译脚本\" class=\"headerlink\" title=\"输入编译脚本\"></a>输入编译脚本</h3><p>在当前终端输入脚本 configure Qt</p>\n<pre><code class=\"shell\">configure -confirm-license -opensource -debug -prefix &quot;D:\\QtVersion\\Qt5.13_Build_MT_X64\\qt5.13_build_mt&quot; -qt-sqlite -qt-zlib -qt-libpng -qt-libjpeg -nomake tests -no-compile-examples -nomake examples </code></pre>\n<p>别忘记自己改下 prefix的位置</p>\n<p>configure完成之后直接</p>\n<pre><code class=\"shell\">nmake\nnmake install</code></pre>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>进入prefix的目录<br><img src=\"/2020/06/28/qt-compile-windows/windows_build_qt_source_debug5.jpg\" alt> </p>\n<p>编译成功，不管是configure还是nmake都没有啥错。</p>\n<p>PS。我看还有jom编译Qt的方法，原谅我对windows的编译不熟悉。有大佬可以补充下，或者给个完成的链接，我补充上。</p>\n","categories":[{"name":"Qt","path":"api/categories/Qt.json"},{"name":"Qt基础教程","path":"api/categories/Qt基础教程.json"}],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"编译","path":"api/tags/编译.json"}]}