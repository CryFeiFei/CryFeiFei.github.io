{"title":"关于Qt的历史","slug":"关于Qt的历史","date":"2020-06-28T15:03:27.000Z","updated":"2020-06-28T15:05:08.122Z","comments":true,"path":"api/articles/关于Qt的历史.json","excerpt":null,"covers":null,"content":"<h1 id=\"版权声明\"><a href=\"#版权声明\" class=\"headerlink\" title=\"版权声明\"></a>版权声明</h1><p>版权声明：本文为博主原创文章，本文章遵循协议<a href=\"https://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\">CC 4.0 BY-SA</a>，转载请附上原文出处链接和本声明。<br>本文链接：<a href=\"https://blog.csdn.net/u011012932/article/details/49826231\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u011012932/article/details/49826231</a></p>\n<h1 id=\"什么是Qt\"><a href=\"#什么是Qt\" class=\"headerlink\" title=\"什么是Qt\"></a>什么是Qt</h1><p>Qt是一个针对桌面、嵌入式、移动设备的一个跨平台的应用程序开发框架，支持的平台包括Linux、OS X、Windows、VxWorks、QNX、Android、iOS、BlackBerry(黑莓)、Sailfish OS（旗鱼操作系统）等。<br>Qt 1991年由Trolltech-奇趣科技（成立于1994年）开发，2008年，Trolltech被Nokia收购，2012年，Qt被Digia收购。<br>Qt是基于C++编写的框架，它既可以开发GUI程序，也可用于开发非GUI程序，比如控制台工具和服务器。预处理器，MOC（全称：Meta-Object Compiler-元对象编译器）用于扩展C++，如：信号和槽的特性。在编译之前，先使用MOC分析Qt扩展的C++源文件（检测是否包含Q_OBJECT宏），然后生成符合C++标准的源文件（新文件名将会由moc_加上原文件名构成）。因此框架本身和应用程序/库使用它能被任何符合标准C++的编译器（像Clang、GCC、 ICC、MinGW 和MSVC）所编译。</p>\n<h1 id=\"发展史\"><a href=\"#发展史\" class=\"headerlink\" title=\"发展史\"></a>发展史</h1><p>Qt的第一个商业版本于1995年推出，随后Qt的发展就很快了，下面是Qt发展史上的一 些里程碑，从之前的Qt1.x开始到现在的Qt5.x。</p>\n<h2 id=\"Qt1-3\"><a href=\"#Qt1-3\" class=\"headerlink\" title=\"Qt1-3\"></a>Qt1-3</h2><table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th>发布日期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1.40</td>\n<td>10 July 1998</td>\n</tr>\n<tr>\n<td align=\"center\">1.41</td>\n<td>2 October 1998</td>\n</tr>\n<tr>\n<td align=\"center\">1.42</td>\n<td>19 December 1998</td>\n</tr>\n<tr>\n<td align=\"center\">1.44</td>\n<td>13 March 1999</td>\n</tr>\n<tr>\n<td align=\"center\">2.0</td>\n<td>26 June 1999</td>\n</tr>\n<tr>\n<td align=\"center\">2.1</td>\n<td>13 April 2000</td>\n</tr>\n<tr>\n<td align=\"center\">2.2</td>\n<td>7 December 2000</td>\n</tr>\n<tr>\n<td align=\"center\">2.3</td>\n<td>8 March 2001</td>\n</tr>\n<tr>\n<td align=\"center\">3.0</td>\n<td>16 October 2001</td>\n</tr>\n<tr>\n<td align=\"center\">3.1</td>\n<td>14 November 2001</td>\n</tr>\n<tr>\n<td align=\"center\">3.2</td>\n<td>24 July 2003</td>\n</tr>\n<tr>\n<td align=\"center\">3.3</td>\n<td>5 February 2004</td>\n</tr>\n</tbody></table>\n<h2 id=\"Qt4\"><a href=\"#Qt4\" class=\"headerlink\" title=\"Qt4\"></a>Qt4</h2><p>Trolltech在2005年6月28发布了Qt4.0，介绍了框架的五个新技术：</p>\n<ul>\n<li>一套模板容器类</li>\n<li>为item views提供了一套模型 - 视图 - 控制器体系结构</li>\n<li>二维绘图框架<ul>\n<li>为低级文本布局提供了Unicode文本渲染器的公共API</li>\n</ul>\n</li>\n<li>基于Action的MainWindow，包括：工具栏，菜单和停靠体系</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th>发布日期</th>\n<th align=\"center\">新特性</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4.1</td>\n<td>20 December 2005</td>\n<td align=\"center\">推出集成SVG微小的支持，一个PDF的后端Qt打印系统，以及其他一些功能。</td>\n</tr>\n<tr>\n<td align=\"center\">4.2</td>\n<td>4 October 2006</td>\n<td align=\"center\">介绍了Windows Vista的支持，部件的CSS样式支持，以及QGraphicsView框架-在屏幕上高效渲染成千上万个2D对象，以取代Qt3.x中的QCanvas类。</td>\n</tr>\n<tr>\n<td align=\"center\">4.3</td>\n<td>30 May 2007</td>\n<td align=\"center\">改进了Windows Vista支持，改进了OpenGL引擎、SVG文件的生成，增加了QtScript（基于QSA的ECMAScript脚本引擎）。</td>\n</tr>\n<tr>\n<td align=\"center\">4.4</td>\n<td>6 May 2008</td>\n<td align=\"center\">特性包含了改进multimedia的支持（使用Phonon），增强XML支持，集中共享内存的IPC框架，以及WebKit集成。</td>\n</tr>\n<tr>\n<td align=\"center\">4.5</td>\n<td>3 March 2009</td>\n<td align=\"center\">主要包括功能有QtCreator，改进图形引擎，WebKit的集成，OpenDocument格式写入支持和新的许可选项，以及OS X Cocoa框架的支持。</td>\n</tr>\n<tr>\n<td align=\"center\">4.6</td>\n<td>1 December 2009</td>\n<td align=\"center\">新的API框架-动画、手势、多点触控。支持Symbian、Windows 7和Mac OS X 10.6，支持扩展一些Unix系统。也取得了整体性能的改进。</td>\n</tr>\n<tr>\n<td align=\"center\">4.7</td>\n<td>21 September 2010</td>\n<td align=\"center\">QML 和 Qt Quick</td>\n</tr>\n<tr>\n<td align=\"center\">4.8</td>\n<td>15 December 2011</td>\n<td align=\"center\">Qt的平台抽象化，支持单线程OpenGL，多线程HTTP，优化了文件系统访问。</td>\n</tr>\n</tbody></table>\n<h2 id=\"Qt5\"><a href=\"#Qt5\" class=\"headerlink\" title=\"Qt5\"></a>Qt5</h2><p>Qt5于2012年12月19正式发布，这个新版本标志着平台的重大变化，硬件加速的显卡，QML和JavaScript发挥了重要作用。传统的C++ - 仅QWidgets继续得到支持，但没有从新体系结构的性能改进中受益，Qt5带来了速度及用户界面上的显著改进，Qt5开发框架移动至qt-project.org。外部开发者可以为Digia公司提交补丁，并让他们审查。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th align=\"left\">发布日期</th>\n<th>新特性</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5.0</td>\n<td align=\"left\">19 December 2012</td>\n<td>对Qt4.x进行一系列重大改革。完成Wayland的支持。</td>\n</tr>\n<tr>\n<td align=\"center\">5.1</td>\n<td align=\"left\">3 July 2013</td>\n<td>新模块以及Android和iOS实验性的支持技术预览。</td>\n</tr>\n<tr>\n<td align=\"center\">5.2</td>\n<td align=\"left\">12 December 2013</td>\n<td>第一个官方支持Android和iOS的版本。</td>\n</tr>\n<tr>\n<td align=\"center\">5.3</td>\n<td align=\"left\">20 May 2014</td>\n<td>集中于稳定性和可用性</td>\n</tr>\n<tr>\n<td align=\"center\">5.4</td>\n<td align=\"left\">10 December 2014</td>\n<td>完整的WinRT和Windows Phone支持。介绍基于Chromium的Qt WebEngine内部组件，将在未来的版本中取代QtWebKit。动态的GL图形切换在Windows（ANGLE或OpenGL）后台，本地化的“外观和感觉”在QtQuick的控制在Android平台的后端，引入Qt WebChannels提供QObject到WebSockets的桥梁。最初仅使用Qt WebKit的集成，但还正在5.5下进行Qt WebEngine集成</td>\n</tr>\n<tr>\n<td align=\"center\">5.5</td>\n<td align=\"left\">1 July 2015</td>\n<td>Qt5.5根据官方网站提供的功能：新模块： Qt 3D、Qt Canvas 3D、Qt Location。过时的模块的：Qt WebKit、Qt Declarative (Qt Quick 1)、Qt Script。蓝牙API的最终版本，新的视频过滤框架，Camera和QML MediaPlayer改善iOS，适用于Linux的NFC，SSL/TLS改进Qt Network</td>\n</tr>\n<tr>\n<td align=\"center\">5.6</td>\n<td align=\"left\">Alpha release: 8 September 2015 Final release plan: 8 December 2015</td>\n<td>值得注意的改进：Qt Core：一些性能改进，包括减少动态性能的内存使用情况和性能最佳化的QString Qt Network：支持HTTP重定向 Qt GUI：改进了跨平台的OpenGL ES3.0和3.1 Qt Multimedia：添加QML类型播放列表 Qt WebEngine：基于Chromium 45，自定义URL方案的API，拦截和阻止网络请求，并跟踪或阻止Cookie QtQML：减少内存消耗 嵌入式平台：支持Intel Atom-based NUCs 过时的模块：Qt Script、Qt Enginio 已删除模块：Qt WebKit, Qt Declarative (Qt Quick 1)</td>\n</tr>\n</tbody></table>\n<h1 id=\"平台支持\"><a href=\"#平台支持\" class=\"headerlink\" title=\"平台支持\"></a>平台支持</h1><p>Qt支持下述平台：</p>\n<ul>\n<li>MS/Windows - 95、98、NT4.0、ME、2000、XP 、Vista、Win7、win8、win2008、win10<ul>\n<li>Unix/X11-Linux、SunSolaris、HP-UX、CompaqTru64 UNIX、IBMAIX、SGI IRIX、FreeBSD、BSD/OS和其它很多X11平台</li>\n<li>Macintosh -Mac OS X</li>\n<li>Embedded - 有帧缓冲(framebuffer)支持的嵌入式Linux平台，Windows CE</li>\n<li>Symbian、Symbian^3、Symbian Anna、Symbian Belle、MeeGo<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2>Qt同X Window上的 Motif、Openwin、GTK 等图形界面库和 Windows平台上的 MFC、OWL、VCL、ATL是同类型的东西，但是 Qt 具有下列优点：</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"优良的跨平台特性\"><a href=\"#优良的跨平台特性\" class=\"headerlink\" title=\"优良的跨平台特性\"></a>优良的跨平台特性</h3><ul>\n<li>Qt支持下列操作系统: Microsoft Windows 95/98， Microsoft Windows NT， Linux， Solaris， SunOS， HP-UX， Digital UNIX (OSF/1， Tru64)， Irix， FreeBSD， BSD/OS， SCO， AIX， OS390，QNX 等等。</li>\n</ul>\n<h3 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h3><ul>\n<li>Qt 的良好封装机制使得 Qt 的模块化程度非常高，可重用性较好，对于用户开发来说是非常 方便的。 Qt 提供了一种称为 signals/slots 的安全类型来替代 callback，这使得各个元件 之间的协同工作变得十分简单。<h3 id=\"丰富的-API\"><a href=\"#丰富的-API\" class=\"headerlink\" title=\"丰富的 API\"></a>丰富的 API</h3></li>\n<li>Qt包括多达250个以上的C++类，还替供基于模板的collections、serialization、 file、I/O device、 directory management、date/time 类。甚至还包括正则表达式的处理功能。<h3 id=\"支持-2D-3D-图形渲染，支持-OpenGL\"><a href=\"#支持-2D-3D-图形渲染，支持-OpenGL\" class=\"headerlink\" title=\"支持 2D/3D 图形渲染，支持 OpenGL\"></a>支持 2D/3D 图形渲染，支持 OpenGL</h3><h3 id=\"大量的开发文档\"><a href=\"#大量的开发文档\" class=\"headerlink\" title=\"大量的开发文档\"></a>大量的开发文档</h3><h3 id=\"XML-支持\"><a href=\"#XML-支持\" class=\"headerlink\" title=\"XML 支持\"></a>XML 支持</h3></li>\n</ul>\n<h1 id=\"Qt-Creator\"><a href=\"#Qt-Creator\" class=\"headerlink\" title=\"Qt Creator\"></a>Qt Creator</h1><p>简介<br>在发布 Qt 4.6 的同时，作为 Qt 开发跨平台 IDE 的Qt Creator也发布了更新版本。Qt Creator 1.3 和 Qt 4.6共同构成的 Qt SDK，包含了开发跨平台应用程序所需的全部功能。</p>\n<p>Qt Creator是一个用于Qt开发的轻量级跨平台集成开发环境。Qt Creator可带来两大关键益处：提供首个专为支持跨平台开发而设计的集成开发环境 (IDE)，并确保首次接触Qt框架的开发人员能迅速上手和操作。即使不开发Qt应用程序，Qt Creator也是一个简单易用且功能强大的IDE。</p>\n<p>Qt Creator 包括项目生成向导、高级的 C++ 代码编辑器、浏览文件及类的工具、集成了 Qt Designer、Qt Assistant、Qt Linguist、图形化的 GDB 调试前端，集成 qmake 构建工具等。<br>功能和优势</p>\n<p>QtCreator 主要是为了帮助新 Qt 用户更快速入门并运行项目，还可提高有经验的 Qt 开发人员的工作效率。</p>\n<p>使用强大的 C++ 代码编辑器可快速编写代码</p>\n<p>语法标识和代码完成功能输入时进行静态代码检验以及提示样式上下文相关的帮助代码折叠括号匹配和括号选择模式高级编辑功能</p>\n<p> 使用浏览工具管理源代码</p>\n<p>集成了领先的版本控制软件，包括 Git、Perforce 和 Subversion开放式文件，无须知晓确切的名称或位置搜索类和文件跨不同位置或文件沿用符号在头文件和源文件，或在声明和定义之间切换为Qt跨平台开发人员的需求而量身定制</p>\n<p>集成了特定于 Qt 的功能，如信号与槽 (Signals &amp; Slots)图示调试器， 对 Qt 类结构可一目了然集成了 Qt Designer 可视化布局和格式构建器只需单击一下就可生成和运行 Qt 项目</p>\n<h1 id=\"Qt-Designer\"><a href=\"#Qt-Designer\" class=\"headerlink\" title=\"Qt Designer\"></a>Qt Designer</h1><p>Qt Designer被称为Qt设计师，用于设计和构建图形用户界面（Qt Widgets）。你可以组合和自定义窗口或对话框（所见即所得），并使用不同的风格和分辨率进行测试。用Qt Designer创建的窗口部件和表格无缝集成编程代码，采用Qt信号和槽机制，这样就可以轻松地分配图形元素的行为。在Qt设计师中设置的所有属性可以动态地在代码中进行更改。此外，类似插件推广和自定义插件功能，可以使用自己的组件来使用Qt Designer。<br>注意：你也可以选择使用Qt Quick来设计用户界面，而不是Qt Widgets。这样更容易写各种各样的应用。它可以完全定制外观，触摸反应的元素，流畅的动画过渡，支持OpenGL图形加速功能。如果刚接触Qt Designer，可以看看Qt设计师文档。有关如何使用Qt设计师，请参阅Qt设计师快速入门。</p>\n<h1 id=\"Qt-Linguist\"><a href=\"#Qt-Linguist\" class=\"headerlink\" title=\"Qt Linguist\"></a>Qt Linguist</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Qt Linguist被称为Qt语言家。主要任务是读取翻译文件、为翻译人员提供友好的翻译界面，是用于界面国际化的重要工具。它能帮助你很容易读懂C++语言。<br>使用方式<br>lupdate可以把.h、.cpp、.ui中需要翻译的字符串提取出来形成.ts文件，然后用linguist翻译。用lerealse生成.qm。<br>翻译一个含有tr()调用的Qt应用程序需要以下三步：</p>\n<ol>\n<li>运行ludate，从应用程序的源代码中提取所有用户可见的字符串。</li>\n<li>使用Qt Linguist翻译该应用程序。</li>\n<li>运行lrelease，生成二进制.qm文件，应用程序可以使用QTranslator加载这个文件。<br>如果开发工程中出现翻译改动，可以多次执行此过程！</li>\n</ol>\n<h1 id=\"Qt-Assistant\"><a href=\"#Qt-Assistant\" class=\"headerlink\" title=\"Qt Assistant\"></a>Qt Assistant</h1><p>Qt Assistant被称为Qt助手，是Qt自带的一款可定制、可重新发行的帮助文件浏览器。它支持HTML文件，用户可以利用其定制自己的功能强大的帮助文档浏览器。</p>\n","more":"<h1 id=\"版权声明\"><a href=\"#版权声明\" class=\"headerlink\" title=\"版权声明\"></a>版权声明</h1><p>版权声明：本文为博主原创文章，本文章遵循协议<a href=\"https://creativecommons.org/licenses/by-sa/4.0/\" target=\"_blank\" rel=\"noopener\">CC 4.0 BY-SA</a>，转载请附上原文出处链接和本声明。<br>本文链接：<a href=\"https://blog.csdn.net/u011012932/article/details/49826231\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u011012932/article/details/49826231</a></p>\n<h1 id=\"什么是Qt\"><a href=\"#什么是Qt\" class=\"headerlink\" title=\"什么是Qt\"></a>什么是Qt</h1><p>Qt是一个针对桌面、嵌入式、移动设备的一个跨平台的应用程序开发框架，支持的平台包括Linux、OS X、Windows、VxWorks、QNX、Android、iOS、BlackBerry(黑莓)、Sailfish OS（旗鱼操作系统）等。<br>Qt 1991年由Trolltech-奇趣科技（成立于1994年）开发，2008年，Trolltech被Nokia收购，2012年，Qt被Digia收购。<br>Qt是基于C++编写的框架，它既可以开发GUI程序，也可用于开发非GUI程序，比如控制台工具和服务器。预处理器，MOC（全称：Meta-Object Compiler-元对象编译器）用于扩展C++，如：信号和槽的特性。在编译之前，先使用MOC分析Qt扩展的C++源文件（检测是否包含Q_OBJECT宏），然后生成符合C++标准的源文件（新文件名将会由moc_加上原文件名构成）。因此框架本身和应用程序/库使用它能被任何符合标准C++的编译器（像Clang、GCC、 ICC、MinGW 和MSVC）所编译。</p>\n<h1 id=\"发展史\"><a href=\"#发展史\" class=\"headerlink\" title=\"发展史\"></a>发展史</h1><p>Qt的第一个商业版本于1995年推出，随后Qt的发展就很快了，下面是Qt发展史上的一 些里程碑，从之前的Qt1.x开始到现在的Qt5.x。</p>\n<h2 id=\"Qt1-3\"><a href=\"#Qt1-3\" class=\"headerlink\" title=\"Qt1-3\"></a>Qt1-3</h2><table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th>发布日期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1.40</td>\n<td>10 July 1998</td>\n</tr>\n<tr>\n<td align=\"center\">1.41</td>\n<td>2 October 1998</td>\n</tr>\n<tr>\n<td align=\"center\">1.42</td>\n<td>19 December 1998</td>\n</tr>\n<tr>\n<td align=\"center\">1.44</td>\n<td>13 March 1999</td>\n</tr>\n<tr>\n<td align=\"center\">2.0</td>\n<td>26 June 1999</td>\n</tr>\n<tr>\n<td align=\"center\">2.1</td>\n<td>13 April 2000</td>\n</tr>\n<tr>\n<td align=\"center\">2.2</td>\n<td>7 December 2000</td>\n</tr>\n<tr>\n<td align=\"center\">2.3</td>\n<td>8 March 2001</td>\n</tr>\n<tr>\n<td align=\"center\">3.0</td>\n<td>16 October 2001</td>\n</tr>\n<tr>\n<td align=\"center\">3.1</td>\n<td>14 November 2001</td>\n</tr>\n<tr>\n<td align=\"center\">3.2</td>\n<td>24 July 2003</td>\n</tr>\n<tr>\n<td align=\"center\">3.3</td>\n<td>5 February 2004</td>\n</tr>\n</tbody></table>\n<h2 id=\"Qt4\"><a href=\"#Qt4\" class=\"headerlink\" title=\"Qt4\"></a>Qt4</h2><p>Trolltech在2005年6月28发布了Qt4.0，介绍了框架的五个新技术：</p>\n<ul>\n<li>一套模板容器类</li>\n<li>为item views提供了一套模型 - 视图 - 控制器体系结构</li>\n<li>二维绘图框架<ul>\n<li>为低级文本布局提供了Unicode文本渲染器的公共API</li>\n</ul>\n</li>\n<li>基于Action的MainWindow，包括：工具栏，菜单和停靠体系</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th>发布日期</th>\n<th align=\"center\">新特性</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">4.1</td>\n<td>20 December 2005</td>\n<td align=\"center\">推出集成SVG微小的支持，一个PDF的后端Qt打印系统，以及其他一些功能。</td>\n</tr>\n<tr>\n<td align=\"center\">4.2</td>\n<td>4 October 2006</td>\n<td align=\"center\">介绍了Windows Vista的支持，部件的CSS样式支持，以及QGraphicsView框架-在屏幕上高效渲染成千上万个2D对象，以取代Qt3.x中的QCanvas类。</td>\n</tr>\n<tr>\n<td align=\"center\">4.3</td>\n<td>30 May 2007</td>\n<td align=\"center\">改进了Windows Vista支持，改进了OpenGL引擎、SVG文件的生成，增加了QtScript（基于QSA的ECMAScript脚本引擎）。</td>\n</tr>\n<tr>\n<td align=\"center\">4.4</td>\n<td>6 May 2008</td>\n<td align=\"center\">特性包含了改进multimedia的支持（使用Phonon），增强XML支持，集中共享内存的IPC框架，以及WebKit集成。</td>\n</tr>\n<tr>\n<td align=\"center\">4.5</td>\n<td>3 March 2009</td>\n<td align=\"center\">主要包括功能有QtCreator，改进图形引擎，WebKit的集成，OpenDocument格式写入支持和新的许可选项，以及OS X Cocoa框架的支持。</td>\n</tr>\n<tr>\n<td align=\"center\">4.6</td>\n<td>1 December 2009</td>\n<td align=\"center\">新的API框架-动画、手势、多点触控。支持Symbian、Windows 7和Mac OS X 10.6，支持扩展一些Unix系统。也取得了整体性能的改进。</td>\n</tr>\n<tr>\n<td align=\"center\">4.7</td>\n<td>21 September 2010</td>\n<td align=\"center\">QML 和 Qt Quick</td>\n</tr>\n<tr>\n<td align=\"center\">4.8</td>\n<td>15 December 2011</td>\n<td align=\"center\">Qt的平台抽象化，支持单线程OpenGL，多线程HTTP，优化了文件系统访问。</td>\n</tr>\n</tbody></table>\n<h2 id=\"Qt5\"><a href=\"#Qt5\" class=\"headerlink\" title=\"Qt5\"></a>Qt5</h2><p>Qt5于2012年12月19正式发布，这个新版本标志着平台的重大变化，硬件加速的显卡，QML和JavaScript发挥了重要作用。传统的C++ - 仅QWidgets继续得到支持，但没有从新体系结构的性能改进中受益，Qt5带来了速度及用户界面上的显著改进，Qt5开发框架移动至qt-project.org。外部开发者可以为Digia公司提交补丁，并让他们审查。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">版本</th>\n<th align=\"left\">发布日期</th>\n<th>新特性</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">5.0</td>\n<td align=\"left\">19 December 2012</td>\n<td>对Qt4.x进行一系列重大改革。完成Wayland的支持。</td>\n</tr>\n<tr>\n<td align=\"center\">5.1</td>\n<td align=\"left\">3 July 2013</td>\n<td>新模块以及Android和iOS实验性的支持技术预览。</td>\n</tr>\n<tr>\n<td align=\"center\">5.2</td>\n<td align=\"left\">12 December 2013</td>\n<td>第一个官方支持Android和iOS的版本。</td>\n</tr>\n<tr>\n<td align=\"center\">5.3</td>\n<td align=\"left\">20 May 2014</td>\n<td>集中于稳定性和可用性</td>\n</tr>\n<tr>\n<td align=\"center\">5.4</td>\n<td align=\"left\">10 December 2014</td>\n<td>完整的WinRT和Windows Phone支持。介绍基于Chromium的Qt WebEngine内部组件，将在未来的版本中取代QtWebKit。动态的GL图形切换在Windows（ANGLE或OpenGL）后台，本地化的“外观和感觉”在QtQuick的控制在Android平台的后端，引入Qt WebChannels提供QObject到WebSockets的桥梁。最初仅使用Qt WebKit的集成，但还正在5.5下进行Qt WebEngine集成</td>\n</tr>\n<tr>\n<td align=\"center\">5.5</td>\n<td align=\"left\">1 July 2015</td>\n<td>Qt5.5根据官方网站提供的功能：新模块： Qt 3D、Qt Canvas 3D、Qt Location。过时的模块的：Qt WebKit、Qt Declarative (Qt Quick 1)、Qt Script。蓝牙API的最终版本，新的视频过滤框架，Camera和QML MediaPlayer改善iOS，适用于Linux的NFC，SSL/TLS改进Qt Network</td>\n</tr>\n<tr>\n<td align=\"center\">5.6</td>\n<td align=\"left\">Alpha release: 8 September 2015 Final release plan: 8 December 2015</td>\n<td>值得注意的改进：Qt Core：一些性能改进，包括减少动态性能的内存使用情况和性能最佳化的QString Qt Network：支持HTTP重定向 Qt GUI：改进了跨平台的OpenGL ES3.0和3.1 Qt Multimedia：添加QML类型播放列表 Qt WebEngine：基于Chromium 45，自定义URL方案的API，拦截和阻止网络请求，并跟踪或阻止Cookie QtQML：减少内存消耗 嵌入式平台：支持Intel Atom-based NUCs 过时的模块：Qt Script、Qt Enginio 已删除模块：Qt WebKit, Qt Declarative (Qt Quick 1)</td>\n</tr>\n</tbody></table>\n<h1 id=\"平台支持\"><a href=\"#平台支持\" class=\"headerlink\" title=\"平台支持\"></a>平台支持</h1><p>Qt支持下述平台：</p>\n<ul>\n<li>MS/Windows - 95、98、NT4.0、ME、2000、XP 、Vista、Win7、win8、win2008、win10<ul>\n<li>Unix/X11-Linux、SunSolaris、HP-UX、CompaqTru64 UNIX、IBMAIX、SGI IRIX、FreeBSD、BSD/OS和其它很多X11平台</li>\n<li>Macintosh -Mac OS X</li>\n<li>Embedded - 有帧缓冲(framebuffer)支持的嵌入式Linux平台，Windows CE</li>\n<li>Symbian、Symbian^3、Symbian Anna、Symbian Belle、MeeGo<h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2>Qt同X Window上的 Motif、Openwin、GTK 等图形界面库和 Windows平台上的 MFC、OWL、VCL、ATL是同类型的东西，但是 Qt 具有下列优点：</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"优良的跨平台特性\"><a href=\"#优良的跨平台特性\" class=\"headerlink\" title=\"优良的跨平台特性\"></a>优良的跨平台特性</h3><ul>\n<li>Qt支持下列操作系统: Microsoft Windows 95/98， Microsoft Windows NT， Linux， Solaris， SunOS， HP-UX， Digital UNIX (OSF/1， Tru64)， Irix， FreeBSD， BSD/OS， SCO， AIX， OS390，QNX 等等。</li>\n</ul>\n<h3 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h3><ul>\n<li>Qt 的良好封装机制使得 Qt 的模块化程度非常高，可重用性较好，对于用户开发来说是非常 方便的。 Qt 提供了一种称为 signals/slots 的安全类型来替代 callback，这使得各个元件 之间的协同工作变得十分简单。<h3 id=\"丰富的-API\"><a href=\"#丰富的-API\" class=\"headerlink\" title=\"丰富的 API\"></a>丰富的 API</h3></li>\n<li>Qt包括多达250个以上的C++类，还替供基于模板的collections、serialization、 file、I/O device、 directory management、date/time 类。甚至还包括正则表达式的处理功能。<h3 id=\"支持-2D-3D-图形渲染，支持-OpenGL\"><a href=\"#支持-2D-3D-图形渲染，支持-OpenGL\" class=\"headerlink\" title=\"支持 2D/3D 图形渲染，支持 OpenGL\"></a>支持 2D/3D 图形渲染，支持 OpenGL</h3><h3 id=\"大量的开发文档\"><a href=\"#大量的开发文档\" class=\"headerlink\" title=\"大量的开发文档\"></a>大量的开发文档</h3><h3 id=\"XML-支持\"><a href=\"#XML-支持\" class=\"headerlink\" title=\"XML 支持\"></a>XML 支持</h3></li>\n</ul>\n<h1 id=\"Qt-Creator\"><a href=\"#Qt-Creator\" class=\"headerlink\" title=\"Qt Creator\"></a>Qt Creator</h1><p>简介<br>在发布 Qt 4.6 的同时，作为 Qt 开发跨平台 IDE 的Qt Creator也发布了更新版本。Qt Creator 1.3 和 Qt 4.6共同构成的 Qt SDK，包含了开发跨平台应用程序所需的全部功能。</p>\n<p>Qt Creator是一个用于Qt开发的轻量级跨平台集成开发环境。Qt Creator可带来两大关键益处：提供首个专为支持跨平台开发而设计的集成开发环境 (IDE)，并确保首次接触Qt框架的开发人员能迅速上手和操作。即使不开发Qt应用程序，Qt Creator也是一个简单易用且功能强大的IDE。</p>\n<p>Qt Creator 包括项目生成向导、高级的 C++ 代码编辑器、浏览文件及类的工具、集成了 Qt Designer、Qt Assistant、Qt Linguist、图形化的 GDB 调试前端，集成 qmake 构建工具等。<br>功能和优势</p>\n<p>QtCreator 主要是为了帮助新 Qt 用户更快速入门并运行项目，还可提高有经验的 Qt 开发人员的工作效率。</p>\n<p>使用强大的 C++ 代码编辑器可快速编写代码</p>\n<p>语法标识和代码完成功能输入时进行静态代码检验以及提示样式上下文相关的帮助代码折叠括号匹配和括号选择模式高级编辑功能</p>\n<p> 使用浏览工具管理源代码</p>\n<p>集成了领先的版本控制软件，包括 Git、Perforce 和 Subversion开放式文件，无须知晓确切的名称或位置搜索类和文件跨不同位置或文件沿用符号在头文件和源文件，或在声明和定义之间切换为Qt跨平台开发人员的需求而量身定制</p>\n<p>集成了特定于 Qt 的功能，如信号与槽 (Signals &amp; Slots)图示调试器， 对 Qt 类结构可一目了然集成了 Qt Designer 可视化布局和格式构建器只需单击一下就可生成和运行 Qt 项目</p>\n<h1 id=\"Qt-Designer\"><a href=\"#Qt-Designer\" class=\"headerlink\" title=\"Qt Designer\"></a>Qt Designer</h1><p>Qt Designer被称为Qt设计师，用于设计和构建图形用户界面（Qt Widgets）。你可以组合和自定义窗口或对话框（所见即所得），并使用不同的风格和分辨率进行测试。用Qt Designer创建的窗口部件和表格无缝集成编程代码，采用Qt信号和槽机制，这样就可以轻松地分配图形元素的行为。在Qt设计师中设置的所有属性可以动态地在代码中进行更改。此外，类似插件推广和自定义插件功能，可以使用自己的组件来使用Qt Designer。<br>注意：你也可以选择使用Qt Quick来设计用户界面，而不是Qt Widgets。这样更容易写各种各样的应用。它可以完全定制外观，触摸反应的元素，流畅的动画过渡，支持OpenGL图形加速功能。如果刚接触Qt Designer，可以看看Qt设计师文档。有关如何使用Qt设计师，请参阅Qt设计师快速入门。</p>\n<h1 id=\"Qt-Linguist\"><a href=\"#Qt-Linguist\" class=\"headerlink\" title=\"Qt Linguist\"></a>Qt Linguist</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Qt Linguist被称为Qt语言家。主要任务是读取翻译文件、为翻译人员提供友好的翻译界面，是用于界面国际化的重要工具。它能帮助你很容易读懂C++语言。<br>使用方式<br>lupdate可以把.h、.cpp、.ui中需要翻译的字符串提取出来形成.ts文件，然后用linguist翻译。用lerealse生成.qm。<br>翻译一个含有tr()调用的Qt应用程序需要以下三步：</p>\n<ol>\n<li>运行ludate，从应用程序的源代码中提取所有用户可见的字符串。</li>\n<li>使用Qt Linguist翻译该应用程序。</li>\n<li>运行lrelease，生成二进制.qm文件，应用程序可以使用QTranslator加载这个文件。<br>如果开发工程中出现翻译改动，可以多次执行此过程！</li>\n</ol>\n<h1 id=\"Qt-Assistant\"><a href=\"#Qt-Assistant\" class=\"headerlink\" title=\"Qt Assistant\"></a>Qt Assistant</h1><p>Qt Assistant被称为Qt助手，是Qt自带的一款可定制、可重新发行的帮助文件浏览器。它支持HTML文件，用户可以利用其定制自己的功能强大的帮助文档浏览器。</p>\n","categories":[{"name":"Qt","path":"api/categories/Qt.json"}],"tags":[{"name":"Qt","path":"api/tags/Qt.json"}]}