{"title":"使用QtCteator编译QtCreator","slug":"使用QtCteator编译QtCreator","date":"2020-06-26T02:41:13.000Z","updated":"2020-06-26T03:37:53.887Z","comments":true,"path":"api/articles/使用QtCteator编译QtCreator.json","excerpt":null,"covers":null,"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>原谅我标题党了，本文标题应该是使用Clang依赖Qt编译QtCreator。</p>\n<p>目前在Linux上做开发，一直使用的IDE就是QtCreator。 实际上一直有想做一个编辑器的想法（因为我觉得QtCreator有点笨重，而我只是想要一个单纯的编辑器的功能。目前开源的优秀的使用Qt制作的编辑器好象是没有。我也一直喜欢使用vim，而且QtCreator也有fakevim的插件。QtCreator我也用着比较舒服，还是Qt写的，我也比较熟悉Qt的代码，所以想要魔改这个项目了。而且从官方fork的话，以后有啥bug可以直接cherry-pick过来，逃）。趁着这个机会，阅读下这个IDE的架构是如何设计的。</p>\n<p>我个人一直很喜欢QtCreator这个IDE，当然没有vs强大（宇宙第一IDE可不是吹的），是不可多得的优秀的IDE。配置环境什么的也比较简单方便。目前我的开发机器环境为Ubuntu16.04,就暂时以这个环境来讲吧。</p>\n<h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><p>如果编译QtCreator，实际上官方的wiki是有的，链接在这里 <a href=\"https://wiki.qt.io/Building_Qt_Creator_from_Git\" target=\"_blank\" rel=\"noopener\">https://wiki.qt.io/Building_Qt_Creator_from_Git</a> 简单的讲，就是如下几个条件</p>\n<blockquote>\n<ul>\n<li>Qt5.6.2及以后版本以后版本的Qt库</li>\n<li>clang5.0及之后版本的编译器</li>\n</ul>\n</blockquote>\n<h3 id=\"Qt编译\"><a href=\"#Qt编译\" class=\"headerlink\" title=\"Qt编译\"></a>Qt编译</h3><p>截止2018年10月13日。目前最新的Qt版本是Qt5.11.2。（5.12还在测试中）那就以最新的Qt版本来编译QtCreator吧。去官网下载最新版本的Qt源码<a href=\"http://download.qt.io/archive/qt/5.11/5.11.2/single/\" target=\"_blank\" rel=\"noopener\">http://download.qt.io/archive/qt/5.11/5.11.2/single/</a><br>比如我就下载到了 /home/zhangpf/Qt/Qt5.11下，解压到当前文件夹，然后新建个新的目录用于放编译好的Qt。</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">mkdir qt5.11.2\ncd /home/zhangpf/Qt/Qt5.11/qt-everywhere-src-5.11.2</code></pre>\n<p>准备编译Qt。（在这里我一开始下载的Qt5.10的版本，因为我还怕5.11不稳定，但是发现编译的时候QtScript模块编译不过，QtCreator工程又依赖QtScript，google了下发现不只是我有这个问题，但是还未解决，已经报了QTBUG。所以我才又下载的Qt5.11的版本来编译的。）</p>\n<p>然后继续</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">./configure -prefix /home/zhangpf/Qt/Qt5.11/qt5.11.2 -debug -opensource -confirm-license\ncd /home/zhangpf/Qt/Qt5.11/qt5.11.2\nmake && make install</code></pre>\n<p>比如我的电脑cpu是i7-7700,4核8线程，我就可以make -j8。还是看自己电脑的性能了。<br>恩，这时候Qt5.11.2的库就准备好了。</p>\n<h2 id=\"clang准备。\"><a href=\"#clang准备。\" class=\"headerlink\" title=\"clang准备。\"></a>clang准备。</h2><p>下载链接<a href=\"http://releases.llvm.org/download.html\" target=\"_blank\" rel=\"noopener\">http://releases.llvm.org/download.html</a> 下载clang clang++ 5.0以后预编译好的版本，比如我就是下载clang6.0的Ubuntu16.04的版本。下载下来可以直接用。放到了/opt 下，然后我又做了个软链到/usr/local/bin/下。</p>\n<h2 id=\"QtCreator准备\"><a href=\"#QtCreator准备\" class=\"headerlink\" title=\"QtCreator准备\"></a>QtCreator准备</h2><p>官方已经讲得很明确了，直接</p>\n<pre><code>git clone --recursive https://code.qt.io/qt-creator/qt-creator.git</code></pre><h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><h3 id=\"配置QtCreator\"><a href=\"#配置QtCreator\" class=\"headerlink\" title=\"配置QtCreator\"></a>配置QtCreator</h3><blockquote>\n<ul>\n<li>工具-选项-构建和运行-编译器   把刚才下载好的clang添加进去，点击应用</li>\n<li>工具-选项-构建和运行-QtVersion 添加一个QtVersion 把编译好的Qt5.11.2 qmake路径加进去，点击应用</li>\n<li>工具-选项-构建和运行-构建套件 添加一个构建套件取名qtcreator，编译器跟QtVersion选择成刚才添加的。点击应用</li>\n</ul>\n</blockquote>\n<h3 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h3><p>直接打开QtCreator的pro文件，构建套件选择刚才新建的qtcreator。然后直接右键pro文件，qmake-&gt;构建.</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>qtcreator源码149m。编译出来的debug版本的QtCreator 1.5G。也是相当大的一个Qt工程了。从头折腾到尾，基本没发现啥大的编译问题与疑难杂症，也就只有一个Qt5.10版本QtScript编译不过的问题，还被我规避掉了。接下来就该阅读这个工程的源码，去更改我想要的结果了。</p>\n","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>原谅我标题党了，本文标题应该是使用Clang依赖Qt编译QtCreator。</p>\n<p>目前在Linux上做开发，一直使用的IDE就是QtCreator。 实际上一直有想做一个编辑器的想法（因为我觉得QtCreator有点笨重，而我只是想要一个单纯的编辑器的功能。目前开源的优秀的使用Qt制作的编辑器好象是没有。我也一直喜欢使用vim，而且QtCreator也有fakevim的插件。QtCreator我也用着比较舒服，还是Qt写的，我也比较熟悉Qt的代码，所以想要魔改这个项目了。而且从官方fork的话，以后有啥bug可以直接cherry-pick过来，逃）。趁着这个机会，阅读下这个IDE的架构是如何设计的。</p>\n<p>我个人一直很喜欢QtCreator这个IDE，当然没有vs强大（宇宙第一IDE可不是吹的），是不可多得的优秀的IDE。配置环境什么的也比较简单方便。目前我的开发机器环境为Ubuntu16.04,就暂时以这个环境来讲吧。</p>\n<h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><p>如果编译QtCreator，实际上官方的wiki是有的，链接在这里 <a href=\"https://wiki.qt.io/Building_Qt_Creator_from_Git\" target=\"_blank\" rel=\"noopener\">https://wiki.qt.io/Building_Qt_Creator_from_Git</a> 简单的讲，就是如下几个条件</p>\n<blockquote>\n<ul>\n<li>Qt5.6.2及以后版本以后版本的Qt库</li>\n<li>clang5.0及之后版本的编译器</li>\n</ul>\n</blockquote>\n<h3 id=\"Qt编译\"><a href=\"#Qt编译\" class=\"headerlink\" title=\"Qt编译\"></a>Qt编译</h3><p>截止2018年10月13日。目前最新的Qt版本是Qt5.11.2。（5.12还在测试中）那就以最新的Qt版本来编译QtCreator吧。去官网下载最新版本的Qt源码<a href=\"http://download.qt.io/archive/qt/5.11/5.11.2/single/\" target=\"_blank\" rel=\"noopener\">http://download.qt.io/archive/qt/5.11/5.11.2/single/</a><br>比如我就下载到了 /home/zhangpf/Qt/Qt5.11下，解压到当前文件夹，然后新建个新的目录用于放编译好的Qt。</p>\n<pre><code class=\"shell\">mkdir qt5.11.2\ncd /home/zhangpf/Qt/Qt5.11/qt-everywhere-src-5.11.2</code></pre>\n<p>准备编译Qt。（在这里我一开始下载的Qt5.10的版本，因为我还怕5.11不稳定，但是发现编译的时候QtScript模块编译不过，QtCreator工程又依赖QtScript，google了下发现不只是我有这个问题，但是还未解决，已经报了QTBUG。所以我才又下载的Qt5.11的版本来编译的。）</p>\n<p>然后继续</p>\n<pre><code class=\"shell\">./configure -prefix /home/zhangpf/Qt/Qt5.11/qt5.11.2 -debug -opensource -confirm-license\ncd /home/zhangpf/Qt/Qt5.11/qt5.11.2\nmake &amp;&amp; make install</code></pre>\n<p>比如我的电脑cpu是i7-7700,4核8线程，我就可以make -j8。还是看自己电脑的性能了。<br>恩，这时候Qt5.11.2的库就准备好了。</p>\n<h2 id=\"clang准备。\"><a href=\"#clang准备。\" class=\"headerlink\" title=\"clang准备。\"></a>clang准备。</h2><p>下载链接<a href=\"http://releases.llvm.org/download.html\" target=\"_blank\" rel=\"noopener\">http://releases.llvm.org/download.html</a> 下载clang clang++ 5.0以后预编译好的版本，比如我就是下载clang6.0的Ubuntu16.04的版本。下载下来可以直接用。放到了/opt 下，然后我又做了个软链到/usr/local/bin/下。</p>\n<h2 id=\"QtCreator准备\"><a href=\"#QtCreator准备\" class=\"headerlink\" title=\"QtCreator准备\"></a>QtCreator准备</h2><p>官方已经讲得很明确了，直接</p>\n<pre><code>git clone --recursive https://code.qt.io/qt-creator/qt-creator.git</code></pre><h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><h3 id=\"配置QtCreator\"><a href=\"#配置QtCreator\" class=\"headerlink\" title=\"配置QtCreator\"></a>配置QtCreator</h3><blockquote>\n<ul>\n<li>工具-选项-构建和运行-编译器   把刚才下载好的clang添加进去，点击应用</li>\n<li>工具-选项-构建和运行-QtVersion 添加一个QtVersion 把编译好的Qt5.11.2 qmake路径加进去，点击应用</li>\n<li>工具-选项-构建和运行-构建套件 添加一个构建套件取名qtcreator，编译器跟QtVersion选择成刚才添加的。点击应用</li>\n</ul>\n</blockquote>\n<h3 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h3><p>直接打开QtCreator的pro文件，构建套件选择刚才新建的qtcreator。然后直接右键pro文件，qmake-&gt;构建.</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>qtcreator源码149m。编译出来的debug版本的QtCreator 1.5G。也是相当大的一个Qt工程了。从头折腾到尾，基本没发现啥大的编译问题与疑难杂症，也就只有一个Qt5.10版本QtScript编译不过的问题，还被我规避掉了。接下来就该阅读这个工程的源码，去更改我想要的结果了。</p>\n","categories":[],"tags":[]}