{"title":"QFileSystemWatcher无法释放的问题","slug":"QFileSystemWatcher无法释放的问题","date":"2020-06-27T08:25:16.000Z","updated":"2020-06-27T08:26:22.854Z","comments":true,"path":"api/articles/QFileSystemWatcher无法释放的问题.json","excerpt":null,"covers":null,"content":"<p>QFileSystemWatcher 在单例类中，不能指定父类，不能用智能指针，否则会释放不掉，发生资源竞争。<br>要这样释放。</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\">    QObject<span class=\"token operator\">::</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>qApp<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">aboutToQuit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m_pCupsFileWatcher<span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">deleteLater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>这是源码中的注意点</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\" spellcheck=\"true\">/*!\n    Destroys the file system watcher.\n    \\note To avoid deadlocks on shutdown, all instances of QFileSystemWatcher\n    need to be destroyed before QCoreApplication. Note that passing\n    QCoreApplication::instance() as the parent object when creating\n    QFileSystemWatcher is not sufficient.\n*/</span>\nQFileSystemWatcher<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">QFileSystemWatcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n","more":"<p>QFileSystemWatcher 在单例类中，不能指定父类，不能用智能指针，否则会释放不掉，发生资源竞争。<br>要这样释放。</p>\n<pre><code class=\"cpp\">    QObject::connect(qApp, SIGNAL(aboutToQuit()), m_pCupsFileWatcher, SLOT(deleteLater()));</code></pre>\n<p>这是源码中的注意点</p>\n<pre><code class=\"cpp\">/*!\n    Destroys the file system watcher.\n    \\note To avoid deadlocks on shutdown, all instances of QFileSystemWatcher\n    need to be destroyed before QCoreApplication. Note that passing\n    QCoreApplication::instance() as the parent object when creating\n    QFileSystemWatcher is not sufficient.\n*/\nQFileSystemWatcher::~QFileSystemWatcher()</code></pre>\n","categories":[],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"QFileSystemWatcher","path":"api/tags/QFileSystemWatcher.json"}]}