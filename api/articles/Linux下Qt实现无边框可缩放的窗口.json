{"title":"Linux下Qt实现无边框可缩放的窗口","slug":"Linux下Qt实现无边框可缩放的窗口","date":"2020-06-27T11:43:32.000Z","updated":"2020-06-27T11:44:33.467Z","comments":true,"path":"api/articles/Linux下Qt实现无边框可缩放的窗口.json","excerpt":null,"covers":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>在Linux平台上做desktop应用的还是非常少的。所以基本上网上这部分资料是没有的。Linux平台又不像Win那么多API。这次的实现，本来自己想写xlib的函数的，然后机智的我从deepin的代码里把他们封装好的抠出来了，然后补充了一些x11的封装函数。来完成最终的效果。</p>\n<p>本篇文章纯粹抛砖引玉，毕竟只是个demo。简单的说一下遇到的坑。</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>实现上很简单，重写qt的三个函数就可以。</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> FLWidget_Linux<span class=\"token operator\">::</span><span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_LINUX</span>\n     <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resizingCornerEdge <span class=\"token operator\">==</span> XUtils<span class=\"token operator\">::</span>CornerEdge<span class=\"token operator\">::</span>kInvalid<span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">{</span>\n      XUtils<span class=\"token operator\">::</span><span class=\"token function\">UpdateCursorShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">contentsMargins</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ResizeHandleWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n <span class=\"token keyword\">return</span> QWidget<span class=\"token operator\">::</span><span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> FLWidget_Linux<span class=\"token operator\">::</span><span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_LINUX</span>\n <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token operator\">::</span>LeftButton<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> XUtils<span class=\"token operator\">::</span>CornerEdge ce <span class=\"token operator\">=</span> XUtils<span class=\"token operator\">::</span><span class=\"token function\">GetCornerEdge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">contentsMargins</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ResizeHandleWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ce <span class=\"token operator\">!=</span> XUtils<span class=\"token operator\">::</span>CornerEdge<span class=\"token operator\">::</span>kInvalid<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n           resizingCornerEdge <span class=\"token operator\">=</span> ce<span class=\"token punctuation\">;</span>\n           <span class=\"token comment\" spellcheck=\"true\">//send x11 move event dont send mouserrelease event</span>\n           XUtils<span class=\"token operator\">::</span><span class=\"token function\">SendButtonRelease</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">globalPos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           XUtils<span class=\"token operator\">::</span><span class=\"token function\">StartResizing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> QCursor<span class=\"token operator\">::</span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n <span class=\"token keyword\">return</span> QWidget<span class=\"token operator\">::</span><span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> FLWidget_Linux<span class=\"token operator\">::</span><span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>event<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_LINUX</span>\n     resizingCornerEdge <span class=\"token operator\">=</span> XUtils<span class=\"token operator\">::</span>CornerEdge<span class=\"token operator\">::</span>kInvalid<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n     <span class=\"token keyword\">return</span> QWidget<span class=\"token operator\">::</span><span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>只重写这三个函数就可以完成对应的功能，当然还得有XUtils。<br>XUtils是deepin封装的一个功能namespace。封装了常用的xlib操作qt的widget的一些函数。<br>然后我补充了一个他们的函数</p>\n<p>主要是调用的xlib的mousemove之后，Qt接受不到release事件，需要手动再发一个</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\">XUtils<span class=\"token operator\">::</span><span class=\"token function\">SendButtonRelease</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">globalPos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">SendButtonRelease</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QWidget <span class=\"token operator\">*</span>widget<span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">const</span> QPoint <span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> QPoint <span class=\"token operator\">&amp;</span>globalPos<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> display <span class=\"token operator\">=</span> QX11Info<span class=\"token operator\">::</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> screen <span class=\"token operator\">=</span> QX11Info<span class=\"token operator\">::</span><span class=\"token function\">appScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n XEvent xevent<span class=\"token punctuation\">;</span>\n <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>xevent<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>XEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n xevent<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ButtonRelease<span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>button <span class=\"token operator\">=</span> Button1<span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>window <span class=\"token operator\">=</span> widget<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">effectiveWinId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>x_root <span class=\"token operator\">=</span> globalPos<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>y_root <span class=\"token operator\">=</span> globalPos<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n xevent<span class=\"token punctuation\">.</span>xbutton<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> display<span class=\"token punctuation\">;</span>\n\n <span class=\"token function\">XSendEvent</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> widget<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">effectiveWinId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> False<span class=\"token punctuation\">,</span> ButtonReleaseMask<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xevent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">XFlush</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>昨天整理了下文档，发到github上了，欢迎star跟fork</p>\n<p><a href=\"https://github.com/CryFeiFei/FLWidget\" target=\"_blank\" rel=\"noopener\" title=\"https://github.com/CryFeiFei/FLWidget\">https://github.com/CryFeiFei/FLWidget</a></p>\n","more":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>在Linux平台上做desktop应用的还是非常少的。所以基本上网上这部分资料是没有的。Linux平台又不像Win那么多API。这次的实现，本来自己想写xlib的函数的，然后机智的我从deepin的代码里把他们封装好的抠出来了，然后补充了一些x11的封装函数。来完成最终的效果。</p>\n<p>本篇文章纯粹抛砖引玉，毕竟只是个demo。简单的说一下遇到的坑。</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><p>实现上很简单，重写qt的三个函数就可以。</p>\n<pre><code class=\"cpp\">void FLWidget_Linux::mouseMoveEvent(QMouseEvent *event)\n{\n#ifdef Q_OS_LINUX\n     const int x = event-&gt;x();\n     const int y = event-&gt;y();\n\n     if (resizingCornerEdge == XUtils::CornerEdge::kInvalid)\n     {\n      XUtils::UpdateCursorShape(this, x, y, this-&gt;layout()-&gt;contentsMargins(), ResizeHandleWidth);\n     }\n#endif\n\n return QWidget::mouseMoveEvent(event);\n}\n\nvoid FLWidget_Linux::mousePressEvent(QMouseEvent *event)\n{\n#ifdef Q_OS_LINUX\n const int x = event-&gt;x();\n const int y = event-&gt;y();\n if (event-&gt;button() == Qt::LeftButton)\n {\n      const XUtils::CornerEdge ce = XUtils::GetCornerEdge(this, x, y, this-&gt;layout()-&gt;contentsMargins(), ResizeHandleWidth);\n      if (ce != XUtils::CornerEdge::kInvalid)\n      {\n           resizingCornerEdge = ce;\n           //send x11 move event dont send mouserrelease event\n           XUtils::SendButtonRelease(this, event-&gt;pos(), event-&gt;globalPos());\n           XUtils::StartResizing(this, QCursor::pos(), ce);\n      }\n }\n#endif\n return QWidget::mousePressEvent(event);\n\nvoid FLWidget_Linux::mouseReleaseEvent(QMouseEvent *event)\n{\n#ifdef Q_OS_LINUX\n     resizingCornerEdge = XUtils::CornerEdge::kInvalid;\n#endif\n     return QWidget::mouseReleaseEvent(event);\n}\n</code></pre>\n<p>只重写这三个函数就可以完成对应的功能，当然还得有XUtils。<br>XUtils是deepin封装的一个功能namespace。封装了常用的xlib操作qt的widget的一些函数。<br>然后我补充了一个他们的函数</p>\n<p>主要是调用的xlib的mousemove之后，Qt接受不到release事件，需要手动再发一个</p>\n<pre><code class=\"cpp\">XUtils::SendButtonRelease(this, event-&gt;pos(), event-&gt;globalPos());</code></pre>\n<pre><code class=\"cpp\">void SendButtonRelease(const QWidget *widget,\n          const QPoint &amp;pos, const QPoint &amp;globalPos)\n{\n const auto display = QX11Info::display();\n const auto screen = QX11Info::appScreen();\n\n XEvent xevent;\n memset(&amp;xevent, 0, sizeof(XEvent));\n\n xevent.type = ButtonRelease;\n xevent.xbutton.button = Button1;\n xevent.xbutton.window = widget-&gt;effectiveWinId();\n xevent.xbutton.x = pos.x();\n xevent.xbutton.y = pos.y();\n xevent.xbutton.x_root = globalPos.x();\n xevent.xbutton.y_root = globalPos.y();\n xevent.xbutton.display = display;\n\n XSendEvent(display, widget-&gt;effectiveWinId(), False, ButtonReleaseMask, &amp;xevent);\n XFlush(display);\n}</code></pre>\n<p>昨天整理了下文档，发到github上了，欢迎star跟fork</p>\n<p><a href=\"https://github.com/CryFeiFei/FLWidget\" target=\"_blank\" rel=\"noopener\" title=\"https://github.com/CryFeiFei/FLWidget\">https://github.com/CryFeiFei/FLWidget</a></p>\n","categories":[],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"Linux","path":"api/tags/Linux.json"},{"name":"无边框","path":"api/tags/无边框.json"}]}