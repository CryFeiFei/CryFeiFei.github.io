{"title":"windows下Qt无边框可变化的实现","slug":"windows下Qt无边框可变化的实现","date":"2020-06-27T11:41:04.000Z","updated":"2020-06-27T11:42:14.984Z","comments":true,"path":"api/articles/windows下Qt无边框可变化的实现.json","excerpt":null,"covers":null,"content":"<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> FLWIDGET_H</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> FLWIDGET_H</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QWidget></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QMouseEvent></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FLWidget</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> QWidget\n<span class=\"token punctuation\">{</span>\n Q_OBJECT\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n <span class=\"token keyword\">explicit</span> <span class=\"token function\">FLWidget</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token operator\">~</span><span class=\"token function\">FLWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n <span class=\"token keyword\">bool</span> <span class=\"token function\">nativeEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QByteArray <span class=\"token operator\">&amp;</span>eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span> override<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">void</span> <span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent<span class=\"token operator\">*</span> e<span class=\"token punctuation\">)</span> override<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">void</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent<span class=\"token operator\">*</span> e<span class=\"token punctuation\">)</span> override<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n <span class=\"token keyword\">int</span> m_bouderWidth<span class=\"token punctuation\">;</span>\n QPoint m_curPos<span class=\"token punctuation\">;</span>\n\nsignals<span class=\"token operator\">:</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">// FLWIDGET_H</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// cpp</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"flwidget.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_WIN</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span><span class=\"token comment\" spellcheck=\"true\">//注意头文件</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windowsx.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QMouseEvent></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">namespace</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constexpr</span> <span class=\"token keyword\">int</span> BOUDERWIDTH <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nFLWidget<span class=\"token operator\">::</span><span class=\"token function\">FLWidget</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">QWidget</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">m_bouderWidth</span><span class=\"token punctuation\">(</span>BOUDERWIDTH<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setMouseTracking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setWindowFlags</span><span class=\"token punctuation\">(</span>Qt<span class=\"token operator\">::</span>FramelessWindowHint <span class=\"token operator\">|</span> Qt<span class=\"token operator\">::</span>Dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background:red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nFLWidget<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">FLWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> FLWidget<span class=\"token operator\">::</span><span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_WIN</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token operator\">::</span>LeftButton<span class=\"token punctuation\">)</span>\n        m_curPos <span class=\"token operator\">=</span> e<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">return</span> QWidget<span class=\"token operator\">::</span><span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> FLWidget<span class=\"token operator\">::</span><span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>QMouseEvent <span class=\"token operator\">*</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_WIN</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">buttons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> Qt<span class=\"token operator\">::</span>LeftButton<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">pos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_curPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">return</span> QWidget<span class=\"token operator\">::</span><span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> FLWidget<span class=\"token operator\">::</span><span class=\"token function\">nativeEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> QByteArray <span class=\"token operator\">&amp;</span>eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token operator\">*</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> Q_OS_WIN</span>\n    MSG<span class=\"token operator\">*</span> msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>MSG<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>message<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>msg<span class=\"token operator\">-</span><span class=\"token operator\">></span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> WM_NCHITTEST<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">int</span> xPos <span class=\"token operator\">=</span> <span class=\"token function\">GET_X_LPARAM</span><span class=\"token punctuation\">(</span>msg<span class=\"token operator\">-</span><span class=\"token operator\">></span>lParam<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">frameGeometry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> yPos <span class=\"token operator\">=</span> <span class=\"token function\">GET_Y_LPARAM</span><span class=\"token punctuation\">(</span>msg<span class=\"token operator\">-</span><span class=\"token operator\">></span>lParam<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">frameGeometry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> nUseFulWidth <span class=\"token operator\">=</span> <span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_bouderWidth<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> nUseFulHeight <span class=\"token operator\">=</span> <span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> m_bouderWidth<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPos <span class=\"token operator\">&lt;</span> m_bouderWidth <span class=\"token operator\">&amp;&amp;</span> yPos <span class=\"token operator\">&lt;</span> m_bouderWidth<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//左上角</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTTOPLEFT<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPos<span class=\"token operator\">>=</span> nUseFulWidth <span class=\"token operator\">&amp;&amp;</span> yPos <span class=\"token operator\">&lt;</span> m_bouderWidth<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//右上角</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTTOPRIGHT<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPos <span class=\"token operator\">&lt;</span> m_bouderWidth <span class=\"token operator\">&amp;&amp;</span> yPos <span class=\"token operator\">>=</span> nUseFulHeight<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//左下角</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTBOTTOMLEFT<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPos <span class=\"token operator\">>=</span> nUseFulWidth <span class=\"token operator\">&amp;&amp;</span> yPos <span class=\"token operator\">>=</span> nUseFulHeight<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//右下角</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTBOTTOMRIGHT<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPos <span class=\"token operator\">&lt;</span> m_bouderWidth<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//左边</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span>  HTLEFT<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xPos <span class=\"token operator\">>=</span> nUseFulWidth<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//右边</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTRIGHT<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yPos <span class=\"token operator\">&lt;</span> m_bouderWidth<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//上边</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTTOP<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yPos <span class=\"token operator\">>=</span> nUseFulHeight<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//下边</span>\n                <span class=\"token operator\">*</span>result <span class=\"token operator\">=</span> HTBOTTOM<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">return</span> QWidget<span class=\"token operator\">::</span><span class=\"token function\">nativeEvent</span><span class=\"token punctuation\">(</span>eventType<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">//此处返回false，留给其他事件处理器处理</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n","more":"<pre><code class=\"cpp\">#ifndef FLWIDGET_H\n#define FLWIDGET_H\n\n#include &lt;QWidget&gt;\n#include &lt;QMouseEvent&gt;\n\nclass FLWidget : public QWidget\n{\n Q_OBJECT\npublic:\n explicit FLWidget(QWidget *parent = nullptr);\n ~FLWidget();\n\npublic:\n bool nativeEvent(const QByteArray &amp;eventType, void *message, long *result) override;\n void mousePressEvent(QMouseEvent* e) override;\n void mouseMoveEvent(QMouseEvent* e) override;\n\nprivate:\n int m_bouderWidth;\n QPoint m_curPos;\n\nsignals:\n\n};\n\n#endif // FLWIDGET_H\n\n\n// cpp\n\n#include &quot;flwidget.h&quot;\n#ifdef Q_OS_WIN\n#include &lt;windows.h&gt;//注意头文件\n#include &lt;windowsx.h&gt;\n#include &lt;QMouseEvent&gt;\n#endif\n\nnamespace\n{\n    constexpr int BOUDERWIDTH = 10;\n}\n\nFLWidget::FLWidget(QWidget *parent) : QWidget(parent), m_bouderWidth(BOUDERWIDTH)\n{\n    setMouseTracking(true);\n    setWindowFlags(Qt::FramelessWindowHint | Qt::Dialog);\n    setStyleSheet(&quot;background:red&quot;);\n    resize(500, 500);\n}\n\nFLWidget::~FLWidget()\n{\n\n}\n\nvoid FLWidget::mousePressEvent(QMouseEvent *e)\n{\n#ifdef Q_OS_WIN\n    if (e-&gt;button() == Qt::LeftButton)\n        m_curPos = e-&gt;pos();\n#endif\n    return QWidget::mousePressEvent(e);\n}\nvoid FLWidget::mouseMoveEvent(QMouseEvent *e)\n{\n#ifdef Q_OS_WIN\n    if (e-&gt;buttons() &amp; Qt::LeftButton)\n        move(e-&gt;pos() + pos() - m_curPos);\n#endif\n    return QWidget::mouseMoveEvent(e);\n}\n\nbool FLWidget::nativeEvent(const QByteArray &amp;eventType, void *message, long *result)\n{\n#ifdef Q_OS_WIN\n    MSG* msg = (MSG*)message;\n    switch(msg-&gt;message)\n    {\n        case WM_NCHITTEST:\n            int xPos = GET_X_LPARAM(msg-&gt;lParam) - this-&gt;frameGeometry().x();\n            int yPos = GET_Y_LPARAM(msg-&gt;lParam) - this-&gt;frameGeometry().y();\n            int nUseFulWidth = width() - m_bouderWidth;\n            int nUseFulHeight = height() - m_bouderWidth;\n            if (xPos &lt; m_bouderWidth &amp;&amp; yPos &lt; m_bouderWidth)    //左上角\n                *result = HTTOPLEFT;\n            else if (xPos&gt;= nUseFulWidth &amp;&amp; yPos &lt; m_bouderWidth)    //右上角\n                *result = HTTOPRIGHT;\n            else if (xPos &lt; m_bouderWidth &amp;&amp; yPos &gt;= nUseFulHeight)    //左下角\n                *result = HTBOTTOMLEFT;\n            else if (xPos &gt;= nUseFulWidth &amp;&amp; yPos &gt;= nUseFulHeight)    //右下角\n                *result = HTBOTTOMRIGHT;\n            else if (xPos &lt; m_bouderWidth)    //左边\n                *result =  HTLEFT;\n            else if (xPos &gt;= nUseFulWidth)    //右边\n                *result = HTRIGHT;\n            else if (yPos &lt; m_bouderWidth)    //上边\n                *result = HTTOP;\n            else if (yPos &gt;= nUseFulHeight)    //下边\n                *result = HTBOTTOM;\n            else\n                return false;\n\n            return true;\n        }\n#endif\n    return QWidget::nativeEvent(eventType, message, result);    //此处返回false，留给其他事件处理器处理\n\n}\n</code></pre>\n","categories":[],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"windows","path":"api/tags/windows.json"}]}