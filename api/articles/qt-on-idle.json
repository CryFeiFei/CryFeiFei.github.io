{"title":"Qt来实现MFC的OnIdle效果","slug":"qt-on-idle","date":"2020-06-30T12:35:48.000Z","updated":"2020-06-30T12:59:49.529Z","comments":true,"path":"api/articles/qt-on-idle.json","excerpt":null,"covers":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>很久很久以前，四年以前，我还是win上的开发，前东家自己实现了一套界面库，使用了MFC + Win32API 来实现的。 那时候还没有接触过Qt，就只能自己维护了，当时是看到了MFC的OnIdle函数。这个函数是利用cpu的空余时间来做一些事儿。现在转到Qt了，还是希望有这个东西。然后搜索资料还是发现一些东西的。</p>\n<h1 id=\"实现1\"><a href=\"#实现1\" class=\"headerlink\" title=\"实现1\"></a>实现1</h1><p>最简单的方式当然是用一个定时器来实时刷新某个按钮的状态了。这是其中一个方法。这里就不多说了</p>\n<h1 id=\"实现2\"><a href=\"#实现2\" class=\"headerlink\" title=\"实现2\"></a>实现2</h1><p>刚转Qt的时候，google的时候发现stackoverflow上已经有人实现了，这里贴上具体的方法<br>这两个函数基本上是最终的实现方法了。 鼠标在applcation中会有对应的事件响应。可以自己看下log，我这里贴上代码</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"mainwindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ui_mainwindow.h\"</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QAbstractEventDispatcher></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QDebug></span></span>\n\n\nMainWindow<span class=\"token operator\">::</span><span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">)</span>\n <span class=\"token operator\">:</span> <span class=\"token function\">QMainWindow</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">,</span> <span class=\"token function\">ui</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> Ui<span class=\"token operator\">::</span>MainWindow<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n ui<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setupUi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n dispatcher <span class=\"token operator\">=</span> QAbstractEventDispatcher<span class=\"token operator\">::</span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>dispatcher<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>dispatcher<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">aboutToBlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">aboutToBlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nMainWindow<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">delete</span> ui<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> MainWindow<span class=\"token operator\">::</span><span class=\"token function\">awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n lastAwake <span class=\"token operator\">=</span> QTime<span class=\"token operator\">::</span><span class=\"token function\">currentTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">qDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Slept for \"</span> <span class=\"token operator\">&lt;&lt;</span> lastBlock<span class=\"token punctuation\">.</span><span class=\"token function\">msecsTo</span><span class=\"token punctuation\">(</span>lastAwake<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" msec\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> MainWindow<span class=\"token operator\">::</span><span class=\"token function\">aboutToBlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n lastBlock <span class=\"token operator\">=</span> QTime<span class=\"token operator\">::</span><span class=\"token function\">currentTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">qDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Worked for \"</span> <span class=\"token operator\">&lt;&lt;</span> lastAwake<span class=\"token punctuation\">.</span><span class=\"token function\">msecsTo</span><span class=\"token punctuation\">(</span>lastBlock<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" msec\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n","more":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>很久很久以前，四年以前，我还是win上的开发，前东家自己实现了一套界面库，使用了MFC + Win32API 来实现的。 那时候还没有接触过Qt，就只能自己维护了，当时是看到了MFC的OnIdle函数。这个函数是利用cpu的空余时间来做一些事儿。现在转到Qt了，还是希望有这个东西。然后搜索资料还是发现一些东西的。</p>\n<h1 id=\"实现1\"><a href=\"#实现1\" class=\"headerlink\" title=\"实现1\"></a>实现1</h1><p>最简单的方式当然是用一个定时器来实时刷新某个按钮的状态了。这是其中一个方法。这里就不多说了</p>\n<h1 id=\"实现2\"><a href=\"#实现2\" class=\"headerlink\" title=\"实现2\"></a>实现2</h1><p>刚转Qt的时候，google的时候发现stackoverflow上已经有人实现了，这里贴上具体的方法<br>这两个函数基本上是最终的实现方法了。 鼠标在applcation中会有对应的事件响应。可以自己看下log，我这里贴上代码</p>\n<pre><code class=\"cpp\">#include &quot;mainwindow.h&quot;\n#include &quot;ui_mainwindow.h&quot;\n\n\n#include &lt;QAbstractEventDispatcher&gt;\n#include &lt;QDebug&gt;\n\n\nMainWindow::MainWindow(QWidget *parent)\n : QMainWindow(parent)\n , ui(new Ui::MainWindow)\n{\n ui-&gt;setupUi(this);\n\n dispatcher = QAbstractEventDispatcher::instance();\n connect(dispatcher, SIGNAL(awake()), SLOT(awake()));\n connect(dispatcher, SIGNAL(aboutToBlock()), SLOT(aboutToBlock()));\n}\n\nMainWindow::~MainWindow()\n{\n delete ui;\n}\n\nvoid MainWindow::awake()\n{\n lastAwake = QTime::currentTime();\n qDebug() &lt;&lt; &quot;Slept for &quot; &lt;&lt; lastBlock.msecsTo(lastAwake) &lt;&lt; &quot; msec&quot;;\n}\n\nvoid MainWindow::aboutToBlock()\n{\n lastBlock = QTime::currentTime();\n qDebug() &lt;&lt; &quot;Worked for &quot; &lt;&lt; lastAwake.msecsTo(lastBlock) &lt;&lt; &quot; msec&quot;;\n}\n</code></pre>\n","categories":[{"name":"Qt","path":"api/categories/Qt.json"}],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"Qt技巧","path":"api/tags/Qt技巧.json"}]}