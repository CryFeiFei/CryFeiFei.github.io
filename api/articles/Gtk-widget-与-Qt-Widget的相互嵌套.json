{"title":"Gtk widget 与 Qt Widget的相互嵌套","slug":"Gtk-widget-与-Qt-Widget的相互嵌套","date":"2020-06-27T05:01:12.000Z","updated":"2020-06-27T05:21:36.318Z","comments":true,"path":"api/articles/Gtk-widget-与-Qt-Widget的相互嵌套.json","excerpt":null,"covers":null,"content":"<h1 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h1><p>gtk qt窗口的相互嵌套。主要是使用了Gtk中的socket跟plug的模式，与Qt中的QX11EmbedContainer。这是两个不同的UI库的相互嵌套的方法。google了下发现有个老哥写出来了，但是gtk嵌入到Qt的代码中是有点问题的，所以我改了改他的代码。最后终于完成了，毕竟我对gtk不太熟悉=。=代码很简单，这里就不做任何说明了。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>pro文件中添加</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\">unix<span class=\"token operator\">:</span> CONFIG <span class=\"token operator\">+</span><span class=\"token operator\">=</span> link_pkgconfig\nunix<span class=\"token operator\">:</span> PKGCONFIG <span class=\"token operator\">+</span><span class=\"token operator\">=</span> gtk<span class=\"token operator\">+-</span><span class=\"token number\">2.0</span></code></pre>\n<p>代码</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gtk/gtk.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QApplication></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QMainWindow></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QPushButton></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QX11EmbedContainer></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QX11EmbedWidget></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gdk/gdkx.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> MAINWINDOW_IS_QT true</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> EMBEDDED_IS_QT false</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">create_qt_embed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    QX11EmbedWidget<span class=\"token operator\">*</span> plug <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> QX11EmbedWidget<span class=\"token punctuation\">;</span>\n    plug<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">embedInto</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QPushButton<span class=\"token operator\">*</span> button <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">QPushButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My Label\"</span><span class=\"token punctuation\">,</span> plug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    plug<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">create_gtk_plug</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token comment\" spellcheck=\"true\">//    GtkWidget* plug = gtk_plug_new(id);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    gtk_widget_show(plug);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    GtkWidget* button = gtk_button_new_with_label(\"My Label\");</span>\n<span class=\"token comment\" spellcheck=\"true\">//    gtk_widget_show(button);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    GDK_WINDOW_XID(button);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    gdk_x11_window_get_xid()</span>\n<span class=\"token comment\" spellcheck=\"true\">//    gtk_container_add(GTK_CONTAINER(plug), button);</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">gtk_init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QApplication <span class=\"token function\">app</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MAINWINDOW_IS_QT<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        QMainWindow<span class=\"token operator\">*</span> main_window <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> QMainWindow<span class=\"token punctuation\">;</span>\n        QX11EmbedContainer<span class=\"token operator\">*</span> container <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> QX11EmbedContainer<span class=\"token punctuation\">;</span>\n        main_window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setCentralWidget</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        container<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background-color:red;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EMBEDDED_IS_QT<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">create_qt_embed</span><span class=\"token punctuation\">(</span>container<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">winId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{</span>\n<span class=\"token comment\" spellcheck=\"true\">//            gtk_widget_get_window(GTK_WIDGET(button));</span>\n            GtkWidget<span class=\"token operator\">*</span> window<span class=\"token punctuation\">;</span>\n            GtkWidget<span class=\"token operator\">*</span> button<span class=\"token punctuation\">;</span>\n            window <span class=\"token operator\">=</span> <span class=\"token function\">gtk_window_new</span><span class=\"token punctuation\">(</span>GTK_WINDOW_TOPLEVEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button <span class=\"token operator\">=</span> <span class=\"token function\">gtk_button_new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">gtk_widget_show</span> <span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">gtk_container_add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_CONTAINER</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">gtk_widget_show</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            XID id <span class=\"token operator\">=</span> <span class=\"token function\">GDK_WINDOW_XWINDOW</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_WIDGET</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            container<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">embedClient</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        main_window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        QApplication<span class=\"token operator\">::</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        GtkWidget <span class=\"token operator\">*</span>window <span class=\"token operator\">=</span> <span class=\"token function\">gtk_window_new</span><span class=\"token punctuation\">(</span>GTK_WINDOW_TOPLEVEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">g_signal_connect</span><span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"destroy\"</span><span class=\"token punctuation\">,</span>\n                         <span class=\"token function\">G_CALLBACK</span><span class=\"token punctuation\">(</span>gtk_main_quit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">gtk_widget_show</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GtkWidget<span class=\"token operator\">*</span> container <span class=\"token operator\">=</span> <span class=\"token function\">gtk_socket_new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">gtk_widget_show</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">gtk_container_add</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_CONTAINER</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EMBEDDED_IS_QT<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">create_qt_embed</span><span class=\"token punctuation\">(</span><span class=\"token function\">gtk_socket_get_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_SOCKET</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">create_gtk_plug</span><span class=\"token punctuation\">(</span><span class=\"token function\">gtk_socket_get_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_SOCKET</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">gtk_main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n","more":"<h1 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h1><p>gtk qt窗口的相互嵌套。主要是使用了Gtk中的socket跟plug的模式，与Qt中的QX11EmbedContainer。这是两个不同的UI库的相互嵌套的方法。google了下发现有个老哥写出来了，但是gtk嵌入到Qt的代码中是有点问题的，所以我改了改他的代码。最后终于完成了，毕竟我对gtk不太熟悉=。=代码很简单，这里就不做任何说明了。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>pro文件中添加</p>\n<pre><code class=\"cpp\">unix: CONFIG += link_pkgconfig\nunix: PKGCONFIG += gtk+-2.0</code></pre>\n<p>代码</p>\n<pre><code class=\"cpp\">#include &lt;gtk/gtk.h&gt;\n#include &lt;QApplication&gt;\n#include &lt;QMainWindow&gt;\n#include &lt;QPushButton&gt;\n#include &lt;QX11EmbedContainer&gt;\n#include &lt;QX11EmbedWidget&gt;\n#include &lt;gdk/gdkx.h&gt;\n#define MAINWINDOW_IS_QT true\n#define EMBEDDED_IS_QT false\nvoid create_qt_embed(long id)\n{\n    QX11EmbedWidget* plug = new QX11EmbedWidget;\n    plug-&gt;embedInto(id);\n    QPushButton* button = new QPushButton(&quot;My Label&quot;, plug);\n    plug-&gt;show();\n}\nvoid create_gtk_plug(long id)\n{\n//    GtkWidget* plug = gtk_plug_new(id);\n//    gtk_widget_show(plug);\n//    GtkWidget* button = gtk_button_new_with_label(&quot;My Label&quot;);\n//    gtk_widget_show(button);\n//    GDK_WINDOW_XID(button);\n//    gdk_x11_window_get_xid()\n//    gtk_container_add(GTK_CONTAINER(plug), button);\n}\nint main(int argc, char* argv[])\n{\n    gtk_init(&amp;argc, &amp;argv);\n    QApplication app(argc, argv);\n    if (MAINWINDOW_IS_QT)\n    {\n        QMainWindow* main_window = new QMainWindow;\n        QX11EmbedContainer* container = new QX11EmbedContainer;\n        main_window-&gt;setCentralWidget(container);\n        container-&gt;setStyleSheet(&quot;background-color:red;&quot;);\n        if (EMBEDDED_IS_QT)\n        {\n            create_qt_embed(container-&gt;winId());\n        }\n        else\n        {\n//            gtk_widget_get_window(GTK_WIDGET(button));\n            GtkWidget* window;\n            GtkWidget* button;\n            window = gtk_window_new(GTK_WINDOW_TOPLEVEL);\n            button = gtk_button_new ();\n            gtk_widget_show (button);\n            gtk_container_add (GTK_CONTAINER (window), button);\n            gtk_widget_show(window);\n            XID id = GDK_WINDOW_XWINDOW (GTK_WIDGET(window)-&gt;window);\n            container-&gt;embedClient(id);\n        }\n        main_window-&gt;show();\n        QApplication::exec();\n    } else\n    {\n        GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);\n        g_signal_connect(G_OBJECT(window), &quot;destroy&quot;,\n                         G_CALLBACK(gtk_main_quit), NULL);\n        gtk_widget_show(window);\n        GtkWidget* container = gtk_socket_new();\n        gtk_widget_show(container);\n        gtk_container_add(GTK_CONTAINER(window), container);\n        if (EMBEDDED_IS_QT)\n        {\n            create_qt_embed(gtk_socket_get_id(GTK_SOCKET(container)));\n        } else\n        {\n            create_gtk_plug(gtk_socket_get_id(GTK_SOCKET(container)));\n        }\n        gtk_main();\n    }\n    return 0;\n}</code></pre>\n","categories":[],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"GTK","path":"api/tags/GTK.json"}]}