{"title":"Linux下使用WPS做office的二次开发","slug":"Linux下使用WPS做office的二次开发","date":"2020-06-27T11:17:26.000Z","updated":"2020-06-27T11:40:03.048Z","comments":true,"path":"api/articles/Linux下使用WPS做office的二次开发.json","excerpt":null,"covers":null,"content":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>上个版本WPS在Linux上就已经支持二次开发了，可以直接去看官网相关的介绍。<a href=\"https://open.wps.cn/\" target=\"_blank\" rel=\"noopener\">https://open.wps.cn/</a></p>\n<p>我们选择WPS的客户端进行二次开发</p>\n<h1 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h1><ul>\n<li>Ubuntu18.04</li>\n<li>wps-office_11.1.0.9126_amd64.deb</li>\n<li>Qt的开发环境（我本地5.14）</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"下载WPS的二次开发demo\"><a href=\"#下载WPS的二次开发demo\" class=\"headerlink\" title=\"下载WPS的二次开发demo\"></a>下载WPS的二次开发demo</h2><p>我们写了一些WPS的二次开发demo来给大家学习</p>\n<p>C++跟Qt代码风格跟我们内部编码风格保持一致。可以看看。</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">// 这个链接是一个版本，已经失效\ngit clone https://git.dev.tencent.com/zouyingfeng/wps.git</code></pre>\n<p>这是现在的路径。 <a href=\"https://zouyingfeng.coding.net/p/wps/d/wps/git/tree/master\" target=\"_blank\" rel=\"noopener\" title=\"https://zouyingfeng.coding.net/p/wps/d/wps/git/tree/master\">https://zouyingfeng.coding.net/p/wps/d/wps/git/tree/master</a></p>\n<p>然后进入cpp的demo的文件夹</p>\n<p>tips</p>\n<p>我这是Ubuntu18.04，这里cpp的pro文件还是要稍微改一下</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\">LIBS <span class=\"token operator\">+</span><span class=\"token operator\">=</span> libc<span class=\"token operator\">++</span>abi<span class=\"token punctuation\">.</span>so<span class=\"token number\">.1</span></code></pre>\n<p>//改成</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\">LIBS <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>kingsoft<span class=\"token operator\">/</span>wps<span class=\"token operator\">-</span>office<span class=\"token operator\">/</span>office6<span class=\"token operator\">/</span>libc<span class=\"token operator\">++</span>abi<span class=\"token punctuation\">.</span>so<span class=\"token number\">.1</span></code></pre>\n<p>需要制定下这个路径。然后就可以编译过了，否则可能会找不到libc++abi.so.1的库。</p>\n<p>接下来使用</p>\n<pre class=\" language-cpp\"><code class=\"language-cpp\">qmake\nmake</code></pre>\n<p>然后执行<br>wpsDemo可执行文件就可以了。</p>\n<p>然后点击</p>\n<p>初始化<br>新建文档<br>就可以新建文档了</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>我这是个官方的demo，社区用户可以自己用这个demo把界面隐藏，然后可以自己做一个命令行批量转化pdf的小工具</p>\n<h2 id=\"PS-关于python的接口\"><a href=\"#PS-关于python的接口\" class=\"headerlink\" title=\"PS 关于python的接口\"></a>PS 关于python的接口</h2><p>我的一个同事用python的swig封装了这个c++接口，然后搞成了python库，有兴趣可以github看一下</p>\n<p>上地址<br><a href=\"https://github.com/timxx/pywpsrpc\" target=\"_blank\" rel=\"noopener\" title=\"https://github.com/timxx/pywpsrpc\">https://github.com/timxx/pywpsrpc</a></p>\n<p>作者是我们团队的一个大佬，热心人，WPS的插入公式的功能就是他门几个做的，也可以欢迎骚扰他。</p>\n","more":"<h1 id=\"序\"><a href=\"#序\" class=\"headerlink\" title=\"序\"></a>序</h1><p>上个版本WPS在Linux上就已经支持二次开发了，可以直接去看官网相关的介绍。<a href=\"https://open.wps.cn/\" target=\"_blank\" rel=\"noopener\">https://open.wps.cn/</a></p>\n<p>我们选择WPS的客户端进行二次开发</p>\n<h1 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h1><ul>\n<li>Ubuntu18.04</li>\n<li>wps-office_11.1.0.9126_amd64.deb</li>\n<li>Qt的开发环境（我本地5.14）</li>\n</ul>\n<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"下载WPS的二次开发demo\"><a href=\"#下载WPS的二次开发demo\" class=\"headerlink\" title=\"下载WPS的二次开发demo\"></a>下载WPS的二次开发demo</h2><p>我们写了一些WPS的二次开发demo来给大家学习</p>\n<p>C++跟Qt代码风格跟我们内部编码风格保持一致。可以看看。</p>\n<pre><code class=\"shell\">// 这个链接是一个版本，已经失效\ngit clone https://git.dev.tencent.com/zouyingfeng/wps.git</code></pre>\n<p>这是现在的路径。 <a href=\"https://zouyingfeng.coding.net/p/wps/d/wps/git/tree/master\" target=\"_blank\" rel=\"noopener\" title=\"https://zouyingfeng.coding.net/p/wps/d/wps/git/tree/master\">https://zouyingfeng.coding.net/p/wps/d/wps/git/tree/master</a></p>\n<p>然后进入cpp的demo的文件夹</p>\n<p>tips</p>\n<p>我这是Ubuntu18.04，这里cpp的pro文件还是要稍微改一下</p>\n<pre><code class=\"cpp\">LIBS += libc++abi.so.1</code></pre>\n<p>//改成</p>\n<pre><code class=\"cpp\">LIBS += /opt/kingsoft/wps-office/office6/libc++abi.so.1</code></pre>\n<p>需要制定下这个路径。然后就可以编译过了，否则可能会找不到libc++abi.so.1的库。</p>\n<p>接下来使用</p>\n<pre><code class=\"cpp\">qmake\nmake</code></pre>\n<p>然后执行<br>wpsDemo可执行文件就可以了。</p>\n<p>然后点击</p>\n<p>初始化<br>新建文档<br>就可以新建文档了</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>我这是个官方的demo，社区用户可以自己用这个demo把界面隐藏，然后可以自己做一个命令行批量转化pdf的小工具</p>\n<h2 id=\"PS-关于python的接口\"><a href=\"#PS-关于python的接口\" class=\"headerlink\" title=\"PS 关于python的接口\"></a>PS 关于python的接口</h2><p>我的一个同事用python的swig封装了这个c++接口，然后搞成了python库，有兴趣可以github看一下</p>\n<p>上地址<br><a href=\"https://github.com/timxx/pywpsrpc\" target=\"_blank\" rel=\"noopener\" title=\"https://github.com/timxx/pywpsrpc\">https://github.com/timxx/pywpsrpc</a></p>\n<p>作者是我们团队的一个大佬，热心人，WPS的插入公式的功能就是他门几个做的，也可以欢迎骚扰他。</p>\n","categories":[],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"WPS","path":"api/tags/WPS.json"},{"name":"office","path":"api/tags/office.json"}]}