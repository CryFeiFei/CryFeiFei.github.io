{"title":"Linux下编译Qt5.14源码","slug":"qt-compile-linux","date":"2020-06-28T13:37:06.000Z","updated":"2020-06-28T14:03:11.458Z","comments":true,"path":"api/articles/qt-compile-linux.json","excerpt":null,"covers":["/2020/06/28/qt-compile-linux/linux_build_qt_source1.jpg","/2020/06/28/qt-compile-linux/linux_build_qt_source2.jpg","/2020/06/28/qt-compile-linux/linux_build_qt_source3.jpg","/2020/06/28/qt-compile-linux/linux_build_qt_source4.jpg","/2020/06/28/qt-compile-linux/linux_build_qt_source5.jpg"],"content":"<h1 id=\"0\"><a href=\"#0\" class=\"headerlink\" title=\"0\"></a>0</h1><p>如果你英文够好，可以直接去官方wiki看教程<br><a href=\"https://wiki.qt.io/Building_Qt_5_from_Git\" target=\"_blank\" rel=\"noopener\">https://wiki.qt.io/Building_Qt_5_from_Git</a></p>\n<p>懒得话，还是看我的吧（逃</p>\n<h1 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h1><p>首先下载这个文件<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.14/5.14.0/single/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.14/5.14.0/single/</a></p>\n<p>下载这个，这个是所有的源码。打包成的一个文件</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source1.jpg\" alt> </p>\n<p>然后解压</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">tar xvf qt-everywhere-src-5.14.0.tar.xz </code></pre>\n<p>在当前目录创建文件夹</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">mkdir build_qt5.14</code></pre>\n<p>现在目录有这几个文件夹</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source2.jpg\" alt> </p>\n<p>一个个解释：</p>\n<ul>\n<li>build_qt5.14 是一会儿Qt要安装的位置</li>\n<li>qt-everywhere-src-5.14.0 是解压好的文件夹</li>\n<li>qt-everywhere-src-5.14.0.tar.xz 是下载的Qt源码</li>\n</ul>\n<h1 id=\"安装环境搭建\"><a href=\"#安装环境搭建\" class=\"headerlink\" title=\"安装环境搭建\"></a>安装环境搭建</h1><pre class=\" language-shell\"><code class=\"language-shell\">sudo apt-get build-dep qt5-default\nsudo apt-get install libxcb-xinerama0-dev\nsudo apt-get install build-essential perl python git\nsudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev</code></pre>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><p>这次我们不编译web相关的模块。<br>进入解压好的文件夹</p>\n<pre><code>cd qt-everywhere-src-5.14.0</code></pre><h3 id=\"编译脚本\"><a href=\"#编译脚本\" class=\"headerlink\" title=\"编译脚本\"></a>编译脚本</h3><p>编译脚本。本次编译debug版本的Qt方便以后学习用。（主要是比Release的快</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">./configure -prefix /home/zhangpf/QtVersion/build_qt5.14 -debug -opensource -confirm-license -no-openssl -no-opengl -qt-xcb -skip qtquickcontrols -skip qtquickcontrols2 -skip qtsensors -skip qtdoc -no-compile-examples</code></pre>\n<p>稍微解释下</p>\n<ul>\n<li>prefix 是一会儿install的路径，如果不制定，就会安装到默认的/usr/local/ 下</li>\n<li>debug 是编译debug版本的Qt</li>\n<li>opensource 是选定开源版本</li>\n<li>confirm-license 是确定下协议<br>其它的参数可以忽略掉</li>\n</ul>\n<p>结束会提示，可以make了。</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source3.jpg\" alt> </p>\n<h2 id=\"编译-1\"><a href=\"#编译-1\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>现在电脑默认是gcc编译器，也可以指定clang作为编译器。<br>我本地gcc版本<br>gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12) </p>\n<p>先按照默认的来吧,假定你机器4核。</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">make -j4 //编译\nmake install //安装到prefix的目录</code></pre>\n<h1 id=\"验证我们自己编译的Qt\"><a href=\"#验证我们自己编译的Qt\" class=\"headerlink\" title=\"验证我们自己编译的Qt\"></a>验证我们自己编译的Qt</h1><p>进入目录<br>/home/zhangpf/QtVersion/build_qt5.14</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source4.jpg\" alt> </p>\n<p>bin里就有我们编译的二进制的Qt;<br>进入bin目录</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">./qmake -v</code></pre>\n<p>看图，已经编译成功</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source5.jpg\" alt></p>\n","more":"<h1 id=\"0\"><a href=\"#0\" class=\"headerlink\" title=\"0\"></a>0</h1><p>如果你英文够好，可以直接去官方wiki看教程<br><a href=\"https://wiki.qt.io/Building_Qt_5_from_Git\" target=\"_blank\" rel=\"noopener\">https://wiki.qt.io/Building_Qt_5_from_Git</a></p>\n<p>懒得话，还是看我的吧（逃</p>\n<h1 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h1><p>首先下载这个文件<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.14/5.14.0/single/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/5.14/5.14.0/single/</a></p>\n<p>下载这个，这个是所有的源码。打包成的一个文件</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source1.jpg\" alt> </p>\n<p>然后解压</p>\n<pre><code class=\"shell\">tar xvf qt-everywhere-src-5.14.0.tar.xz </code></pre>\n<p>在当前目录创建文件夹</p>\n<pre><code class=\"shell\">mkdir build_qt5.14</code></pre>\n<p>现在目录有这几个文件夹</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source2.jpg\" alt> </p>\n<p>一个个解释：</p>\n<ul>\n<li>build_qt5.14 是一会儿Qt要安装的位置</li>\n<li>qt-everywhere-src-5.14.0 是解压好的文件夹</li>\n<li>qt-everywhere-src-5.14.0.tar.xz 是下载的Qt源码</li>\n</ul>\n<h1 id=\"安装环境搭建\"><a href=\"#安装环境搭建\" class=\"headerlink\" title=\"安装环境搭建\"></a>安装环境搭建</h1><pre><code class=\"shell\">sudo apt-get build-dep qt5-default\nsudo apt-get install libxcb-xinerama0-dev\nsudo apt-get install build-essential perl python git\nsudo apt-get install &#39;^libxcb.*-dev&#39; libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev</code></pre>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><p>这次我们不编译web相关的模块。<br>进入解压好的文件夹</p>\n<pre><code>cd qt-everywhere-src-5.14.0</code></pre><h3 id=\"编译脚本\"><a href=\"#编译脚本\" class=\"headerlink\" title=\"编译脚本\"></a>编译脚本</h3><p>编译脚本。本次编译debug版本的Qt方便以后学习用。（主要是比Release的快</p>\n<pre><code class=\"shell\">./configure -prefix /home/zhangpf/QtVersion/build_qt5.14 -debug -opensource -confirm-license -no-openssl -no-opengl -qt-xcb -skip qtquickcontrols -skip qtquickcontrols2 -skip qtsensors -skip qtdoc -no-compile-examples</code></pre>\n<p>稍微解释下</p>\n<ul>\n<li>prefix 是一会儿install的路径，如果不制定，就会安装到默认的/usr/local/ 下</li>\n<li>debug 是编译debug版本的Qt</li>\n<li>opensource 是选定开源版本</li>\n<li>confirm-license 是确定下协议<br>其它的参数可以忽略掉</li>\n</ul>\n<p>结束会提示，可以make了。</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source3.jpg\" alt> </p>\n<h2 id=\"编译-1\"><a href=\"#编译-1\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>现在电脑默认是gcc编译器，也可以指定clang作为编译器。<br>我本地gcc版本<br>gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12) </p>\n<p>先按照默认的来吧,假定你机器4核。</p>\n<pre><code class=\"shell\">make -j4 //编译\nmake install //安装到prefix的目录</code></pre>\n<h1 id=\"验证我们自己编译的Qt\"><a href=\"#验证我们自己编译的Qt\" class=\"headerlink\" title=\"验证我们自己编译的Qt\"></a>验证我们自己编译的Qt</h1><p>进入目录<br>/home/zhangpf/QtVersion/build_qt5.14</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source4.jpg\" alt> </p>\n<p>bin里就有我们编译的二进制的Qt;<br>进入bin目录</p>\n<pre><code class=\"shell\">./qmake -v</code></pre>\n<p>看图，已经编译成功</p>\n<p><img src=\"/2020/06/28/qt-compile-linux/linux_build_qt_source5.jpg\" alt></p>\n","categories":[{"name":"Qt","path":"api/categories/Qt.json"}],"tags":[{"name":"Qt","path":"api/tags/Qt.json"},{"name":"Linux","path":"api/tags/Linux.json"}]}